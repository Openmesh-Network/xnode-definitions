{
    "name": "Invidious",
    "desc": "An open source alternative front-end to YouTube",
    "tags": [
        "Media Streaming - Video Streaming"
    ],
    "website": "https://invidious.io/",
    "logo": "https://invidious.io/favicon-32x32.png",
    "specs": {
        "ram": 0,
        "storage": 0
    },
    "nixName": "invidious",
    "options": [
        {
            "name": "address",
            "desc": "The IP address Invidious should bind to.",
            "nixName": "address",
            "type": "string",
            "value": "if config.services.invidious.nginx.enable then \"127.0.0.1\" else \"0.0.0.0\""
        },
        {
            "name": "database.createLocally",
            "desc": "Whether to create a local database with PostgreSQL.",
            "nixName": "database.createLocally",
            "type": "boolean",
            "value": "true"
        },
        {
            "name": "database.host",
            "desc": "The database host Invidious should use.  If  null , the local unix socket is used. Otherwise TCP isused.",
            "nixName": "database.host",
            "type": "null or string",
            "value": "null"
        },
        {
            "name": "database.passwordFile",
            "desc": "Path to file containing the database password.",
            "nixName": "database.passwordFile",
            "type": "null or string",
            "value": "null"
        },
        {
            "name": "database.port",
            "desc": "The port of the database Invidious should use.  Defaults to the the default postgresql port.",
            "nixName": "database.port",
            "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
            "value": "config.services.postgresql.settings.port"
        },
        {
            "name": "domain",
            "desc": "The FQDN Invidious is reachable on.  This is used to configure nginx and for building absolute URLs.",
            "nixName": "domain",
            "type": "null or string",
            "value": "null"
        },
        {
            "name": "enable",
            "desc": "Whether to enable Invidious.",
            "nixName": "enable",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "extraSettingsFile",
            "desc": "A file including Invidious settings.  It gets merged with the settings specified in  services.invidious.settings  and can be used tostore secrets like  hmac_key  outside of the nix store.",
            "nixName": "extraSettingsFile",
            "type": "null or string",
            "value": "null"
        },
        {
            "name": "hmacKeyFile",
            "desc": "A path to a file containing the  hmac_key . If null , a key will be generated automatically on firststart.  If non- null , this option overrides any hmac_key  specified in  services.invidious.settings  or via  services.invidious.extraSettingsFile .",
            "nixName": "hmacKeyFile",
            "type": "null or path",
            "value": "null"
        },
        {
            "name": "http3-ytproxy.enable",
            "desc": "Whether to enable http3-ytproxy for faster loading of images andvideo playback.  If  services.invidious.nginx.enable  is used, nginx willbe configured automatically. If not, you need to configure a reverseproxy yourself according to  https://docs.invidious.io/improve-public-instance/#3-speed-up-video-playback-with-http3-ytproxy .",
            "nixName": "http3-ytproxy.enable",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "http3-ytproxy.package",
            "desc": "The http3-ytproxy package to use.",
            "nixName": "http3-ytproxy.package",
            "type": "package",
            "value": "pkgs.http3-ytproxy"
        },
        {
            "name": "nginx.enable",
            "desc": "Whether to configure nginx as a reverse proxy for Invidious.  It serves it under the domain specified in  services.invidious.settings.domain  with enabled TLSand ACME. Further configuration can be done through  services.nginx.virtualHosts.${config.services.invidious.settings.domain}.* ,which can also be used to disable AMCE and TLS.",
            "nixName": "nginx.enable",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "package",
            "desc": "The invidious package to use.",
            "nixName": "package",
            "type": "package",
            "value": "pkgs.invidious"
        },
        {
            "name": "port",
            "desc": "The port Invidious should listen on.  To allow access from outside, you can use either  services.invidious.nginx or add  config.services.invidious.port  to  networking.firewall.allowedTCPPorts .",
            "nixName": "port",
            "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
            "value": "3000"
        },
        {
            "name": "serviceScale",
            "desc": "How many invidious instances to run.  See  https://docs.invidious.io/improve-public-instance/#2-multiple-invidious-processes for more details on how this is intended to work. All instances beyondthe first one have the options  channel_threads  and feed_threads  set to 0 to avoid conflicts with multipleinstances refreshing subscriptions. Instances will be configured to bindto consecutive ports starting with  services.invidious.port  for the first instance.",
            "nixName": "serviceScale",
            "type": "signed integer",
            "value": "1"
        },
        {
            "name": "settings",
            "desc": "The settings Invidious should use.  See  config.example.yml for a list of all possible options.",
            "nixName": "settings",
            "type": "JSON value",
            "value": "{ }"
        }
    ],
    "show": false,
    "tested": false
}