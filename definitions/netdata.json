{
    "name": "Netdata",
    "desc": "Real-time performance monitoring tool",
    "nixName": "netdata",
    "specs": {
        "ram": 0,
        "storage": 0
    },
    "tags": [
        "Monitoring"
    ],
    "website": "https://www.netdata.cloud/",
    "logo": "https://www.netdata.cloud/favicon-32x32.png",
    "options": [
        {
            "name": "claimTokenFile",
            "desc": "If set, automatically registers the agent using the given claim token file.",
            "nixName": "claimTokenFile",
            "type": "null or path",
            "value": "null"
        },
        {
            "name": "config",
            "desc": "netdata.conf configuration as nix attributes. cannot be combined with configText.",
            "nixName": "config",
            "type": "attribute set of (attribute set)",
            "value": "{ }"
        },
        {
            "name": "configDir",
            "desc": "Complete netdata config directory except netdata.conf. The default configuration is merged with changes defined in this option. Each top-level attribute denotes a path in the configuration directory as in environment.etc. Its value is the absolute path and must be readable by netdata. Cannot be combined with configText.",
            "nixName": "configDir",
            "type": "attribute set of path",
            "value": "{ }"
        },
        {
            "name": "configText",
            "desc": "Verbatim netdata.conf, cannot be combined with config.",
            "nixName": "configText",
            "type": "null or strings concatenated with \"\\n\"",
            "value": "null"
        },
        {
            "name": "deadlineBeforeStopSec",
            "desc": "In order to detect when netdata is misbehaving, we run a concurrent task pinging netdata (wait-for-netdata-up) in the systemd unit. If after a while, this task does not succeed, we stop the unit and mark it as failed. You can control this deadline in seconds with this option, it\u2019s useful to bump it if you have (1) a lot of data (2) doing upgrades (3) have low IOPS/throughput.",
            "nixName": "deadlineBeforeStopSec",
            "type": "signed integer",
            "value": "120"
        },
        {
            "name": "enable",
            "desc": "Whether to enable netdata.",
            "nixName": "enable",
            "type": "boolean",
            "value": "true"
        },
        {
            "name": "enableAnalyticsReporting",
            "desc": "Enable reporting of anonymous usage statistics to Netdata Inc. via either Google Analytics (in versions prior to 1.29.4), or Netdata Inc.\u2019s self-hosted PostHog (in versions 1.29.4 and later). See: https://learn.netdata.cloud/docs/agent/anonymous-statistics",
            "nixName": "enableAnalyticsReporting",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "extraPluginPaths",
            "desc": "Extra paths to add to the netdata global \u201cplugins directory\u201d option. Useful for when you want to include your own collection scripts. Details about writing a custom netdata plugin are available at: https://docs.netdata.cloud/collectors/plugins.d/ Cannot be combined with configText.",
            "nixName": "extraPluginPaths",
            "type": "list of path",
            "value": "[ ]"
        },
        {
            "name": "group",
            "desc": "Group under which netdata runs.",
            "nixName": "group",
            "type": "string",
            "value": "netdata"
        },
        {
            "name": "package",
            "desc": "The netdata package to use.",
            "nixName": "package",
            "type": "package",
            "value": "pkgs.netdata"
        },
        {
            "name": "python.enable",
            "desc": "Whether to enable python-based plugins",
            "nixName": "python.enable",
            "type": "boolean",
            "value": "true"
        },
        {
            "name": "python.extraPackages",
            "desc": "Extra python packages available at runtime to enable additional python plugins.",
            "nixName": "python.extraPackages",
            "type": "function that evaluates to a(n) list of package",
            "value": "ps: []"
        },
        {
            "name": "python.recommendedPythonPackages",
            "desc": "Whether to enable a set of recommended Python plugins by installing extra Python packages.",
            "nixName": "python.recommendedPythonPackages",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "user",
            "desc": "User account under which netdata runs.",
            "nixName": "user",
            "type": "string",
            "value": "netdata"
        }
    ]
}