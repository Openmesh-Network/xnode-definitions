{
    "name": "Ollama",
    "desc": "Get up and running with large language models locally",
    "tags": [
        "Analytics"
    ],
    "website": "https://github.com/ollama/ollama",
    "logo": "https://github.githubassets.com/favicons/favicon.png",
    "specs": {
        "ram": 8192,
        "storage": 12280
    },
    "nixName": "ollama",
    "options": [
        {
            "name": "acceleration",
            "desc": "What interface to use for hardware acceleration.    null : default behavior  if  nixpkgs.config.rocmSupport  is enabled, uses \"rocm\"   if  nixpkgs.config.cudaSupport  is enabled, uses \"cuda\"   otherwise defaults to  false      false : disable GPU, only use CPU   \"rocm\" : supported by most modern AMD GPUs  may require overriding gpu type with services.ollama.rocmOverrideGfx  if rocm doesn\u2019t detect yourAMD gpu     \"cuda\" : supported by most modern NVIDIA GPUs",
            "nixName": "acceleration",
            "type": "null or one of false, \"rocm\", \"cuda\"",
            "value": "null"
        },
        {
            "name": "enable",
            "desc": "Whether to enable ollama server for local large language models.",
            "nixName": "enable",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "environmentVariables",
            "desc": "Set arbitrary environment variables for the ollama service.  Be aware that these are only seen by the ollama server (systemdservice), not normal invocations like  ollama run . Since ollama run  is mostly a shell around the ollama server, thisis usually sufficient.",
            "nixName": "environmentVariables",
            "type": "attribute set of string",
            "value": "{ }"
        },
        {
            "name": "home",
            "desc": "The home directory that the ollama service is started in.  See also  services.ollama.writablePaths  and services.ollama.sandbox .",
            "nixName": "home",
            "type": "string",
            "value": "\"%S/ollama\""
        },
        {
            "name": "host",
            "desc": "The host address which the ollama server HTTP interface listensto.",
            "nixName": "host",
            "type": "string",
            "value": "\"127.0.0.1\""
        },
        {
            "name": "loadModels",
            "desc": "The models to download as soon as the service starts. Search formodels of your choice from:  https://ollama.com/library",
            "nixName": "loadModels",
            "type": "list of string",
            "value": "[ ]"
        },
        {
            "name": "models",
            "desc": "The directory that the ollama service will read models from anddownload new models to.  See also  services.ollama.writablePaths  and services.ollama.sandbox  if downloading models or othermutation of the filesystem is required.",
            "nixName": "models",
            "type": "string",
            "value": "\"%S/ollama/models\""
        },
        {
            "name": "openFirewall",
            "desc": "Whether to open the firewall for ollama. This adds services.ollama.port  to networking.firewall.allowedTCPPorts .",
            "nixName": "openFirewall",
            "type": "boolean",
            "value": "false"
        },
        {
            "name": "package",
            "desc": "The ollama package to use.",
            "nixName": "package",
            "type": "package",
            "value": "pkgs.ollama"
        },
        {
            "name": "port",
            "desc": "Which port the ollama server listens to.",
            "nixName": "port",
            "type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
            "value": "11434"
        },
        {
            "name": "rocmOverrideGfx",
            "desc": "Override what rocm will detect your gpu model as. For example, makerocm treat your RX 5700 XT (or any other model) as an RX 6900 XT using avalue of  \"10.3.0\"  (gfx 1030).  This sets the value of  HSA_OVERRIDE_GFX_VERSION . See  ollama\u2019sdocs  for details.",
            "nixName": "rocmOverrideGfx",
            "type": "null or string",
            "value": "null"
        },
        {
            "name": "sandbox",
            "desc": "Whether to enable systemd\u2019s sandboxing capabilities.  This sets   DynamicUser  ,which runs the server as a unique user with read-only access to most ofthe filesystem.  See also  services.ollama.writablePaths .",
            "nixName": "sandbox",
            "type": "boolean",
            "value": "true"
        },
        {
            "name": "writablePaths",
            "desc": "Paths that the server should have write access to.  This sets   ReadWritePaths  ,which allows specified paths to be written to through the defaultsandboxing.  See also  services.ollama.sandbox .",
            "nixName": "writablePaths",
            "type": "list of string",
            "value": "[ ]"
        }
    ],
    "show": false,
    "tested": false
}