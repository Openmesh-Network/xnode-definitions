{
    "took": 15,
    "timed_out": false,
    "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
    },
    "hits": {
        "total": {
            "value": 139,
            "relation": "eq"
        },
        "max_score": 1.0,
        "hits": [
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "j4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/v2ray.nix",
                    "option_name": "services.v2ray.config",
                    "option_description": "<rendered-html><p>The configuration object.</p>\n<p>Either <code>configFile</code> or <code>config</code> must be\nspecified.</p>\n<p>See <a\nhref=\"https://www.v2fly.org/en_US/v5/config/overview.html\">https://www.v2fly.org/en_US/v5/config/overview.html</a>.</p>\n</rendered-html>",
                    "option_type": "null or (attribute set of unspecified value)",
                    "option_default": "null",
                    "option_example": "{\n  inbounds = [\n    {\n      listen = \"127.0.0.1\";\n      port = 1080;\n      protocol = \"http\";\n    }\n  ];\n  outbounds = [\n    {\n      protocol = \"freedom\";\n    }\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "kIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/v2ray.nix",
                    "option_name": "services.v2ray.configFile",
                    "option_description": "<rendered-html><p>The absolute path to the configuration file.</p>\n<p>Either <code>configFile</code> or <code>config</code> must be\nspecified.</p>\n<p>See <a\nhref=\"https://www.v2fly.org/en_US/v5/config/overview.html\">https://www.v2fly.org/en_US/v5/config/overview.html</a>.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/etc/v2ray/config.json\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "kYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/v2ray.nix",
                    "option_name": "services.v2ray.enable",
                    "option_description": "<rendered-html><p>Whether to run v2ray server.</p>\n<p>Either <code>configFile</code> or <code>config</code> must be\nspecified.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "koDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/v2ray.nix",
                    "option_name": "services.v2ray.package",
                    "option_description": "<rendered-html><p>The v2ray package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.v2ray",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "k4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/v2raya.nix",
                    "option_name": "services.v2raya.enable",
                    "option_description": "<rendered-html><p>Whether to enable the v2rayA service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "lIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances",
                    "option_description": "<rendered-html><p>v4l2-relayd instances to be created.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": "{\n  example = {\n    cardLabel = \"Example card\";\n    input.pipeline = \"videotestsrc\";\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "lYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.cardLabel",
                    "option_description": "<rendered-html><p>The name the camera will show up as.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "loDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable this v4l2-relayd instance.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "l4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.extraPackages",
                    "option_description": "<rendered-html><p>Extra packages to add to <code class=\"interpreted-text\"\nrole=\"env\">GST_PLUGIN_PATH</code> for the instance.</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "mIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.input.format",
                    "option_description": "<rendered-html><p>The video-format to read from input-stream.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"YUY2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "mYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.input.framerate",
                    "option_description": "<rendered-html><p>The framerate to read from input-stream.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "30",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "moDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.input.height",
                    "option_description": "<rendered-html><p>The height to read from input-stream.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "720",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "m4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.input.pipeline",
                    "option_description": "<rendered-html><p>The gstreamer-pipeline to use for the input-stream.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "nIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.input.width",
                    "option_description": "<rendered-html><p>The width to read from input-stream.</p>\n</rendered-html>",
                    "option_type": "positive integer, meaning >0",
                    "option_default": "1280",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "nYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.name",
                    "option_description": "<rendered-html><p>The name of the instance.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\u2039name\u203a\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "noDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/video/v4l2-relayd.nix",
                    "option_name": "services.v4l2-relayd.instances.<name>.output.format",
                    "option_description": "<rendered-html><p>The video-format to write to output-stream.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"YUY2\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "n4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.config",
                    "option_description": "<rendered-html><p>Verbatim default.vcl configuration.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "oIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.enable",
                    "option_description": "<rendered-html><p>Whether to enable Varnish Server.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "oYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.enableConfigCheck",
                    "option_description": "<rendered-html><p>Whether to enable checking the config during build time.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "ooDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.extraCommandLine",
                    "option_description": "<rendered-html><p>Command line switches for varnishd (run \u2018varnishd -?\u2019 to get list of\noptions)</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"\"",
                    "option_example": "\"-s malloc,256M\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "o4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.extraModules",
                    "option_description": "<rendered-html><p>Varnish modules (except \u2018std\u2019).</p>\n</rendered-html>",
                    "option_type": "list of package",
                    "option_default": "[ ]",
                    "option_example": "[ pkgs.varnishPackages.geoip ]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "pIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.http_address",
                    "option_description": "<rendered-html><p>HTTP listen address and port.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"*:6081\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "pYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.package",
                    "option_description": "<rendered-html><p>The varnish package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.varnish",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "poDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-servers/varnish/default.nix",
                    "option_name": "services.varnish.stateDir",
                    "option_description": "<rendered-html><p>Directory holding all state for Varnish to run.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/var/spool/varnish/${config.networking.hostName}\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "p4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.address",
                    "option_description": "<rendered-html><p>The name of the ip interface to listen to</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"127.0.0.1:8200\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "qIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.dev",
                    "option_description": "<rendered-html><p>In this mode, Vault runs in-memory and starts unsealed. This option\nis not meant production but for development and testing i.e. for nixos\ntests.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "qYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.devRootTokenID",
                    "option_description": "<rendered-html><p>Initial root token. This only applies when <code\nclass=\"interpreted-text\" role=\"option\">services.vault.dev</code> is\ntrue</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "qoDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.enable",
                    "option_description": "<rendered-html><p>Whether to enable Vault daemon.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "q4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.extraConfig",
                    "option_description": "<rendered-html><p>Extra text appended to <code class=\"interpreted-text\"\nrole=\"file\">vault.hcl</code>.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "rIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.extraSettingsPaths",
                    "option_description": "<rendered-html><p>Configuration files to load besides the immutable one defined by the\nNixOS module. This can be used to avoid putting credentials in the Nix\nstore, which can be read by any user.</p>\n<p>Each path can point to a JSON- or HCL-formatted file, or a directory\nto be scanned for files with <code>.hcl</code> or <code>.json</code>\nextensions.</p>\n<p>To upload the confidential file with NixOps, use for example:</p>\n<pre><code># https://releases.nixos.org/nixops/latest/manual/manual.html#opt-deployment.keys\ndeployment.keys.&quot;vault.hcl&quot; = let db = import ./db-credentials.nix; in {\n  text = &#39;&#39;\n    storage &quot;postgresql&quot; {\n      connection_url = &quot;postgres://${db.username}:${db.password}@host.example.com/exampledb?sslmode=verify-ca&quot;\n    }\n  &#39;&#39;;\n  user = &quot;vault&quot;;\n};\nservices.vault.extraSettingsPaths = [&quot;/run/keys/vault.hcl&quot;];\nservices.vault.storageBackend = &quot;postgresql&quot;;\nusers.users.vault.extraGroups = [&quot;keys&quot;];</code></pre>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "rYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.listenerExtraConfig",
                    "option_description": "<rendered-html><p>Extra text appended to the listener section.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "''\n  tls_min_version = \"tls12\"\n''",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "roDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.package",
                    "option_description": "<rendered-html><p>The vault package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vault",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "r4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.storageBackend",
                    "option_description": "<rendered-html><p>The name of the type of storage backend</p>\n</rendered-html>",
                    "option_type": "one of \"inmem\", \"file\", \"consul\", \"zookeeper\", \"s3\", \"azure\", \"dynamodb\", \"etcd\", \"mssql\", \"mysql\", \"postgresql\", \"swift\", \"gcs\", \"raft\"",
                    "option_default": "\"inmem\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "sIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.storageConfig",
                    "option_description": "<rendered-html><p>HCL configuration to insert in the storageBackend section.</p>\n<p>Confidential values should not be specified here because this\noption\u2019s value is written to the Nix store, which is publicly readable.\nProvide credentials and such in a separate file using <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.vault.extraSettingsPaths&amp;query=services.vault.extraSettingsPaths\">services.vault.extraSettingsPaths</a>.</p>\n</rendered-html>",
                    "option_type": "null or strings concatenated with \"\\n\"",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "sYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.storagePath",
                    "option_description": "<rendered-html><p>Data directory for file backend</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "if config.services.vault.storageBackend == \"file\" || cfg.storageBackend == \"raft\"\nthen \"/var/lib/vault\"\nelse null\n",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "soDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.telemetryConfig",
                    "option_description": "<rendered-html><p>Telemetry configuration</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "s4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.tlsCertFile",
                    "option_description": "<rendered-html><p>TLS certificate file. TLS will be disabled unless this option is\nset</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/path/to/your/cert.pem\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "tIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault.nix",
                    "option_name": "services.vault.tlsKeyFile",
                    "option_description": "<rendered-html><p>TLS private key file. TLS will be disabled unless this option is\nset</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/path/to/your/key.pem\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "tYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances",
                    "option_description": "<rendered-html><p>Attribute set of vault-agent instances. Creates independent\n<code>vault-agent-${name}.service</code> systemd units for each instance\ndefined here.</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "toDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable this vault-agent instance.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "t4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.group",
                    "option_description": "<rendered-html><p>Group under which this instance runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "uIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.package",
                    "option_description": "<rendered-html><p>The vault package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vault",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "uYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.settings",
                    "option_description": "<rendered-html><p>Free-form settings written directly to the <code>config.json</code>\nfile. Refer to <a\nhref=\"https://developer.hashicorp.com/vault/docs/agent#configuration-file-options\">https://developer.hashicorp.com/vault/docs/agent#configuration-file-options</a>\nfor supported values.</p>\n<div class=\"note\">\n<p>Resulting format is JSON not HCL. Refer to <a\nhref=\"https://www.hcl2json.com/\">https://www.hcl2json.com/</a> if you\nare unsure how to convert HCL options to JSON.</p>\n</div>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "uoDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.settings.pid_file",
                    "option_description": "<rendered-html><p>Path to use for the pid file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/run/vault-agent/\u2039name\u203a.pid\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "u4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.settings.template",
                    "option_description": "<rendered-html><p>Template section of vault-agent. Refer to <a\nhref=\"https://developer.hashicorp.com/vault/docs/agent/template\">https://developer.hashicorp.com/vault/docs/agent/template</a>\nfor supported values.</p>\n</rendered-html>",
                    "option_type": "list of attribute set of anything",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "vIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vault-agent.nix",
                    "option_name": "services.vault-agent.instances.<name>.user",
                    "option_description": "<rendered-html><p>User under which this instance runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"root\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "vYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.backupDir",
                    "option_description": "<rendered-html><p>The directory under which vaultwarden will backup its persistent\ndata.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/var/backup/vaultwarden\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "voDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.config",
                    "option_description": "<rendered-html><p>The configuration of vaultwarden is done through environment\nvariables, therefore it is recommended to use upper snake case (e.g.\n<code class=\"interpreted-text\"\nrole=\"env\">DISABLE_2FA_REMEMBER</code>).</p>\n<p>However, camel case (e.g. <code>disable2FARemember</code>) is also\nsupported: The NixOS module will convert it automatically to upper case\nsnake case (e.g. <code class=\"interpreted-text\"\nrole=\"env\">DISABLE_2FA_REMEMBER</code>). In this conversion digits (0-9)\nare handled just like upper case characters, so <code>foo2</code> would\nbe converted to <code class=\"interpreted-text\" role=\"env\">FOO_2</code>.\nNames already in this format remain unchanged, so <code>FOO2</code>\nremains <code>FOO2</code> if passed as such, even though\n<code>foo2</code> would have been converted to <code\nclass=\"interpreted-text\" role=\"env\">FOO_2</code>. This allows working\naround any potential future conflicting naming conventions.</p>\n<p>Based on the attributes passed to this config option an environment\nfile will be generated that is passed to vaultwarden\u2019s systemd\nservice.</p>\n<p>The available configuration options can be found in <a\nhref=\"https://github.com/dani-garcia/vaultwarden/blob/1.31.0/.env.template\">the\nenvironment template file</a>.</p>\n<p>See <a\nhref=\"https://search.nixos.org/options?channel=unstable&amp;show=services.vaultwarden.environmentFile&amp;query=services.vaultwarden.environmentFile\">services.vaultwarden.environmentFile</a>\nfor how to set up access to the Admin UI to invite initial users.</p>\n</rendered-html>",
                    "option_type": "attribute set of (null or boolean or signed integer or string)",
                    "option_default": "{\n  ROCKET_ADDRESS = \"::1\";\n  ROCKET_PORT = 8222;\n}",
                    "option_example": "{\n  DOMAIN = \"https://bitwarden.example.com\";\n  SIGNUPS_ALLOWED = false;\n\n  # Vaultwarden currently recommends running behind a reverse proxy\n  # (nginx or similar) for TLS termination, see\n  # https://github.com/dani-garcia/vaultwarden/wiki/Hardening-Guide#reverse-proxying\n  # > you should avoid enabling HTTPS via vaultwarden's built-in Rocket TLS support,\n  # > especially if your instance is publicly accessible.\n  #\n  # A suitable NixOS nginx reverse proxy example config might be:\n  #\n  #     services.nginx.virtualHosts.\"bitwarden.example.com\" = {\n  #       enableACME = true;\n  #       forceSSL = true;\n  #       locations.\"/\" = {\n  #         proxyPass = \"http://127.0.0.1:${toString config.services.vaultwarden.config.ROCKET_PORT}\";\n  #       };\n  #     };\n  ROCKET_ADDRESS = \"127.0.0.1\";\n  ROCKET_PORT = 8222;\n\n  ROCKET_LOG = \"critical\";\n\n  # This example assumes a mailserver running on localhost,\n  # thus without transport encryption.\n  # If you use an external mail server, follow:\n  #   https://github.com/dani-garcia/vaultwarden/wiki/SMTP-configuration\n  SMTP_HOST = \"127.0.0.1\";\n  SMTP_PORT = 25;\n  SMTP_SSL = false;\n\n  SMTP_FROM = \"admin@bitwarden.example.com\";\n  SMTP_FROM_NAME = \"example.com Bitwarden server\";\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "v4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.dbBackend",
                    "option_description": "<rendered-html><p>Which database backend vaultwarden will be using.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"mysql\", \"postgresql\"",
                    "option_default": "\"sqlite\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "wIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.enable",
                    "option_description": "<rendered-html><p>Whether to enable vaultwarden.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "wYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.environmentFile",
                    "option_description": "<rendered-html><p>Additional environment file as defined in <a\nhref=\"https://www.freedesktop.org/software/systemd/man/systemd.exec.html\"><code\nclass=\"interpreted-text\" role=\"manpage\">systemd.exec(5)</code></a>.</p>\n<p>Secrets like <code class=\"interpreted-text\"\nrole=\"env\">ADMIN_TOKEN</code> and <code class=\"interpreted-text\"\nrole=\"env\">SMTP_PASSWORD</code> should be passed to the service without\nadding them to the world-readable Nix store.</p>\n<p>Note that this file needs to be available on the host on which\n<code>vaultwarden</code> is running.</p>\n<p>As a concrete example, to make the Admin UI available (from which new\nusers can be invited initially), the secret <code\nclass=\"interpreted-text\" role=\"env\">ADMIN_TOKEN</code> needs to be\ndefined as described <a\nhref=\"https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page\">here</a>:</p>\n<pre><code># Admin secret token, see\n# https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page\nADMIN_TOKEN=...copy-paste a unique generated secret token here...</code></pre>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": "\"/var/lib/vaultwarden.env\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "woDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.package",
                    "option_description": "<rendered-html><p>The vaultwarden package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vaultwarden",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "w4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/security/vaultwarden/default.nix",
                    "option_name": "services.vaultwarden.webVaultPackage",
                    "option_description": "<rendered-html><p>Web vault package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vaultwarden.webvault",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "xIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.enable",
                    "option_description": "<rendered-html><p>Whether to enable vdirsyncer.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "xYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs",
                    "option_description": "<rendered-html><p>vdirsyncer job configurations</p>\n</rendered-html>",
                    "option_type": "attribute set of (submodule)",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "xoDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.additionalGroups",
                    "option_description": "<rendered-html><p>additional groups to add the dynamic user to</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "x4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.config.general",
                    "option_description": "<rendered-html><p>general configuration</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "yIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.config.pairs",
                    "option_description": "<rendered-html><p>vdirsyncer pair configurations</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": "{\n  my_contacts = {\n    a = \"my_cloud_contacts\";\n    b = \"my_local_contacts\";\n    collections = [ \"from a\" ];\n    conflict_resolution = \"a wins\";\n    metadata = [ \"color\" \"displayname\" ];\n  };\n};\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "yYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.config.statusPath",
                    "option_description": "<rendered-html><p>vdirsyncer\u2019s status path</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "/var/lib/vdirsyncer/${attrName}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "yoDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.config.storages",
                    "option_description": "<rendered-html><p>vdirsyncer storage configurations</p>\n</rendered-html>",
                    "option_type": "attribute set of (attribute set)",
                    "option_default": "{ }",
                    "option_example": "{\n  my_cloud_contacts = {\n    type = \"carddav\";\n    url = \"https://dav.example.com/\";\n    read_only = true;\n    username = \"user\";\n    \"password.fetch\" = [ \"command\" \"cat\" \"/etc/vdirsyncer/cloud.passwd\" ];\n  };\n  my_local_contacts = {\n    type = \"carddav\";\n    url = \"https://localhost/\";\n    username = \"user\";\n    \"password.fetch\" = [ \"command\" \"cat\" \"/etc/vdirsyncer/local.passwd\" ];\n  };\n}\n",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "y4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.configFile",
                    "option_description": "<rendered-html><p>existing configuration file</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "zIDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.enable",
                    "option_description": "<rendered-html><p>Whether to enable this vdirsyncer job.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": "false",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "zYDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.forceDiscover",
                    "option_description": "<rendered-html><p>Run <code>yes | vdirsyncer discover</code> prior to\n<code>vdirsyncer sync</code></p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "zoDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.group",
                    "option_description": "<rendered-html><p>group to run vdirsyncer as</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "z4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.timerConfig",
                    "option_description": "<rendered-html><p>systemd timer configuration</p>\n</rendered-html>",
                    "option_type": "attribute set",
                    "option_default": "{\n  OnBootSec = \"1h\";\n  OnUnitActiveSec = \"6h\";\n}",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "0IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.jobs.<name>.user",
                    "option_description": "<rendered-html><p>User account to run vdirsyncer as, otherwise as a systemd dynamic\nuser</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "0YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vdirsyncer.nix",
                    "option_name": "services.vdirsyncer.package",
                    "option_description": "<rendered-html><p>The vdirsyncer package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vdirsyncer",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "0oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.enable",
                    "option_description": "<rendered-html><p>Whether to enable VDR, a video disk recorder.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "04DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.enableLirc",
                    "option_description": "<rendered-html><p>Whether to enable LIRC.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "1IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.extraArguments",
                    "option_description": "<rendered-html><p>Additional command line arguments to pass to VDR.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "1YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.group",
                    "option_description": "<rendered-html><p>Group under which the VDRvdr service runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"vdr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "1oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.package",
                    "option_description": "<rendered-html><p>The vdr package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vdr",
                    "option_example": "wrapVdr.override { plugins = with pkgs.vdrPlugins; [ hello ]; }",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "14DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.user",
                    "option_description": "<rendered-html><p>User under which the VDR service runs.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"vdr\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "2IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/hardware/vdr.nix",
                    "option_name": "services.vdr.videoDir",
                    "option_description": "<rendered-html><p>Recording directory</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/srv/vdr/video\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "2YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/vector.nix",
                    "option_name": "services.vector.enable",
                    "option_description": "<rendered-html><p>Whether to enable Vector, a high-performance observability data\npipeline.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "2oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/vector.nix",
                    "option_name": "services.vector.journaldAccess",
                    "option_description": "<rendered-html><p>Enable Vector to access journald.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "24DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/vector.nix",
                    "option_name": "services.vector.package",
                    "option_description": "<rendered-html><p>The vector package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vector",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "3IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/logging/vector.nix",
                    "option_name": "services.vector.settings",
                    "option_description": "<rendered-html><p>Specify the configuration for Vector in Nix.</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "3YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/victoriametrics.nix",
                    "option_name": "services.victoriametrics.enable",
                    "option_description": "<rendered-html><p>Whether to enable VictoriaMetrics, a time series database, long-term\nremote storage for Prometheus.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "3oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/victoriametrics.nix",
                    "option_name": "services.victoriametrics.extraOptions",
                    "option_description": "<rendered-html><p>Extra options to pass to VictoriaMetrics. See the README: <a\nhref=\"https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/README.md\">https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/README.md</a>\nor <code class=\"interpreted-text\"\nrole=\"command\">victoriametrics -help</code> for more information.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "34DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/victoriametrics.nix",
                    "option_name": "services.victoriametrics.listenAddress",
                    "option_description": "<rendered-html><p>The listen address for the http interface.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\":8428\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "4IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/victoriametrics.nix",
                    "option_name": "services.victoriametrics.package",
                    "option_description": "<rendered-html><p>The victoriametrics package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.victoriametrics",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "4YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/databases/victoriametrics.nix",
                    "option_name": "services.victoriametrics.retentionPeriod",
                    "option_description": "<rendered-html><p>Retention period in months.</p>\n</rendered-html>",
                    "option_type": "signed integer",
                    "option_default": "1",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "4oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.database.database",
                    "option_description": "<rendered-html><p>Database name.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"vikunja\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "44DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.database.host",
                    "option_description": "<rendered-html><p>Database host address. Can also be a socket.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"localhost\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "5IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.database.path",
                    "option_description": "<rendered-html><p>Path to the sqlite3 database file.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"/var/lib/vikunja/vikunja.db\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "5YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.database.type",
                    "option_description": "<rendered-html><p>Database engine to use.</p>\n</rendered-html>",
                    "option_type": "one of \"sqlite\", \"mysql\", \"postgres\"",
                    "option_default": "\"sqlite\"",
                    "option_example": "\"postgres\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "5oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.database.user",
                    "option_description": "<rendered-html><p>Database user.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"vikunja\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "54DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.enable",
                    "option_description": "<rendered-html><p>Whether to enable vikunja service.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "6IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.environmentFiles",
                    "option_description": "<rendered-html><p>List of environment files set in the vikunja systemd service. For\nexample passwords should be set in one of these files.</p>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "6YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.frontendHostname",
                    "option_description": "<rendered-html><p>The Hostname under which the frontend is running.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "6oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.frontendScheme",
                    "option_description": "<rendered-html><p>Whether the site is available via http or https.</p>\n</rendered-html>",
                    "option_type": "one of \"http\", \"https\"",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "64DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.package",
                    "option_description": "<rendered-html><p>The vikunja package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vikunja",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "7IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.port",
                    "option_description": "<rendered-html><p>The TCP port exposed by the API.</p>\n</rendered-html>",
                    "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                    "option_default": "3456",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "7YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/web-apps/vikunja.nix",
                    "option_name": "services.vikunja.settings",
                    "option_description": "<rendered-html><p>Vikunja configuration. Refer to <a\nhref=\"https://vikunja.io/docs/config-options/\">https://vikunja.io/docs/config-options/</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "7oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.enable",
                    "option_description": "<rendered-html><p>Whether to enable vmagent.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "74DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.extraArgs",
                    "option_description": "<rendered-html><p>Extra args to pass to <code>vmagent</code>. See the docs: <a\nhref=\"https://docs.victoriametrics.com/vmagent.html#advanced-usage\">https://docs.victoriametrics.com/vmagent.html#advanced-usage</a>\nor <code class=\"interpreted-text\" role=\"command\">vmagent -help</code>\nfor more information.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "8IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.openFirewall",
                    "option_description": "<rendered-html><p>Whether to open the firewall for the default ports.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "8YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.package",
                    "option_description": "<rendered-html><p>The vmagent package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.vmagent",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "8oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.prometheusConfig",
                    "option_description": "<rendered-html><p>Config for prometheus style metrics</p>\n</rendered-html>",
                    "option_type": "JSON value",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "84DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.remoteWrite.basicAuthPasswordFile",
                    "option_description": "<rendered-html><p>File that contains the Basic Auth password used to connect to\nremote_write endpoint</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "9IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.remoteWrite.basicAuthUsername",
                    "option_description": "<rendered-html><p>Basic Auth username used to connect to remote_write endpoint</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "9YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmagent.nix",
                    "option_name": "services.vmagent.remoteWrite.url",
                    "option_description": "<rendered-html><p>Endpoint for prometheus compatible remote_write</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "9oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.enable",
                    "option_description": "<rendered-html><p>Whether to enable vmalert.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "94DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.package",
                    "option_description": "<rendered-html><p>The victoriametrics package to use.</p>\n</rendered-html>",
                    "option_type": "package",
                    "option_default": "pkgs.victoriametrics",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "-IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.rules",
                    "option_description": "<rendered-html><p>A list of the given alerting or recording rules against configured\n<code>\"datasource.url\"</code> compatible with Prometheus HTTP API for\n<code>vmalert</code> to execute. Refer to <a\nhref=\"https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/app/vmalert/README.md#rules\">https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/app/vmalert/README.md#rules</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "YAML value",
                    "option_default": "{ }",
                    "option_example": "{\n  group = [\n    {\n      name = \"TestGroup\";\n      rules = [\n        {\n          alert = \"ExampleAlertAlwaysFiring\";\n          expr = ''\n            sum by(job)\n            (up == 1)\n          '';\n        }\n      ];\n    }\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "-YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.settings",
                    "option_description": "<rendered-html><p><code>vmalert</code> configuration, passed via command line flags.\nRefer to <a\nhref=\"https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/app/vmalert/README.md#configuration\">https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/app/vmalert/README.md#configuration</a>\nfor details on supported values.</p>\n</rendered-html>",
                    "option_type": "attribute set of (boolean or signed integer or path or string or list of (boolean or signed integer or path or string))",
                    "option_default": "{ }",
                    "option_example": "{\n  \"datasource.disableKeepAlive\" = true;\n  \"datasource.showURL\" = false;\n  \"datasource.url\" = \"http://localhost:8428\";\n  rule = [\n    \"http://<some-server-addr>/path/to/rules\"\n    \"dir/*.yaml\"\n  ];\n}",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "-oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.settings.\"datasource.url\"",
                    "option_description": "<rendered-html><p>Datasource compatible with Prometheus HTTP API.</p>\n</rendered-html>",
                    "option_type": "non-empty string",
                    "option_default": null,
                    "option_example": "\"http://localhost:8428\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "-4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.settings.\"notifier.url\"",
                    "option_description": "<rendered-html><p>Prometheus Alertmanager URL. List all Alertmanager URLs if it runs in\nthe cluster mode to ensure high availability.</p>\n</rendered-html>",
                    "option_type": "list of non-empty string",
                    "option_default": "[ ]",
                    "option_example": "[\n  \"http://127.0.0.1:9093\"\n]",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "_IDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vmalert.nix",
                    "option_name": "services.vmalert.settings.rule",
                    "option_description": "<rendered-html><p>Path to the files with alerting and/or recording rules.</p>\n<div class=\"note\">\n<p>Consider using the <code class=\"interpreted-text\"\nrole=\"option\">services.vmalert.rules</code> option as a convenient\nalternative for declaring rules directly in the <code>nix</code>\nlanguage.</p>\n</div>\n</rendered-html>",
                    "option_type": "list of path",
                    "option_default": null,
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "_YDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/monitoring/vnstat.nix",
                    "option_name": "services.vnstat.enable",
                    "option_description": "<rendered-html><p>Whether to enable update of network usage statistics via vnstatd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "_oDntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.allowWriteableChroot",
                    "option_description": "<rendered-html><p>Allow the use of writeable root inside chroot().</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "_4DntpABMU8RZ4DXSGlK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousMkdirEnable",
                    "option_description": "<rendered-html><p>Whether any uploads are permitted to anonymous users.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "AIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousUmask",
                    "option_description": "<rendered-html><p>Anonymous write umask.</p>\n</rendered-html>",
                    "option_type": "string",
                    "option_default": "\"077\"",
                    "option_example": "\"002\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "AYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousUploadEnable",
                    "option_description": "<rendered-html><p>Whether any uploads are permitted to anonymous users.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "AoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousUser",
                    "option_description": "<rendered-html><p>Whether to enable the anonymous FTP user.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "A4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousUserHome",
                    "option_description": "<rendered-html><p>Directory to consider the HOME of the anonymous user.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "\"/home/ftp/\"",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "BIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.anonymousUserNoPassword",
                    "option_description": "<rendered-html><p>Whether to disable the password for the anonymous FTP user.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "BYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.chrootlocalUser",
                    "option_description": "<rendered-html><p>Whether local users are confined to their home directory.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "BoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.enable",
                    "option_description": "<rendered-html><p>Whether to enable vsftpd.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": "true",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "B4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.enableVirtualUsers",
                    "option_description": "<rendered-html><p>Whether to enable the <code>pam_userdb</code>-based virtual user\nsystem</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "CIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.extraConfig",
                    "option_description": "<rendered-html><p>Extra configuration to add at the bottom of the generated\nconfiguration file.</p>\n</rendered-html>",
                    "option_type": "strings concatenated with \"\\n\"",
                    "option_default": "\"\"",
                    "option_example": "\"ftpd_banner=Hello\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "CYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.forceLocalDataSSL",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">sslEnable</code> is true. Non anonymous (local) users must\nuse a secure SSL connection for sending/receiving data on data\nconnection.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "CoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.forceLocalLoginsSSL",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">sslEnable</code> is true. Non anonymous (local) users must\nuse a secure SSL connection to send a password.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "C4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.localRoot",
                    "option_description": "<rendered-html><p>This option represents a directory which vsftpd will try to change\ninto after a local (i.e. non- anonymous) login.</p>\n<p>Failure is silently ignored.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/var/www/$USER\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "DIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.localUsers",
                    "option_description": "<rendered-html><p>Whether to enable FTP for local users.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "DYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.portPromiscuous",
                    "option_description": "<rendered-html><p>Set to YES if you want to disable the PORT security check that\nensures that outgoing data connections can only connect to the client.\nOnly enable if you know what you are doing!</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "DoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.rsaCertFile",
                    "option_description": "<rendered-html><p>RSA certificate file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "D4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.rsaKeyFile",
                    "option_description": "<rendered-html><p>RSA private key file.</p>\n</rendered-html>",
                    "option_type": "null or path",
                    "option_default": "null",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "EIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.ssl_sslv2",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">ssl_enable</code> is activated. If enabled, this option\nwill permit SSL v2 protocol connections. TLS v1 connections are\npreferred.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "EYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.ssl_sslv3",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">ssl_enable</code> is activated. If enabled, this option\nwill permit SSL v3 protocol connections. TLS v1 connections are\npreferred.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "EoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.ssl_tlsv1",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">ssl_enable</code> is activated. If enabled, this option\nwill permit TLS v1 protocol connections. TLS v1 connections are\npreferred.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "true",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "E4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.userDbPath",
                    "option_description": "<rendered-html><p>Only applies if <code class=\"interpreted-text\"\nrole=\"option\">enableVirtualUsers</code> is true. Path pointing to the\n<code>pam_userdb</code> user database used by vsftpd to authenticate the\nvirtual users.</p>\n<p>This user list should be stored in the Berkeley DB database\nformat.</p>\n<p>To generate a new user database, create a text file, add your users\nusing the following format:</p>\n<pre><code>user1\npassword1\nuser2\npassword2</code></pre>\n<p>You can then install <code>pkgs.db</code> to generate the Berkeley DB\nusing</p>\n<pre><code>db_load -T -t hash -f logins.txt userDb.db</code></pre>\n<p>Caution: <code>pam_userdb</code> will automatically append a\n<code>.db</code> suffix to the filename you provide though this option.\nThis option shouldn\u2019t include this filetype suffix.</p>\n</rendered-html>",
                    "option_type": "null or string",
                    "option_default": "null",
                    "option_example": "\"/etc/vsftpd/userDb\"",
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "FIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.userlist",
                    "option_description": "<rendered-html><p>See <code class=\"interpreted-text\"\nrole=\"option\">userlistFile</code>.</p>\n</rendered-html>",
                    "option_type": "list of string",
                    "option_default": "[ ]",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "FYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.userlistDeny",
                    "option_description": "<rendered-html><p>Specifies whether <code class=\"interpreted-text\"\nrole=\"option\">userlistFile</code> is a list of user names to allow or\ndeny access. The default <code>false</code> means whitelist/allow.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "FoDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.userlistEnable",
                    "option_description": "<rendered-html><p>Whether users are included.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "F4DntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.userlistFile",
                    "option_description": "<rendered-html><p>Newline separated list of names to be allowed/denied if <code\nclass=\"interpreted-text\" role=\"option\">userlistEnable</code> is\n<code>true</code>. Meaning see <code class=\"interpreted-text\"\nrole=\"option\">userlistDeny</code>.</p>\n<p>The default is a file containing the users from <code\nclass=\"interpreted-text\" role=\"option\">userlist</code>.</p>\n<p>If explicitly set to null userlist_file will not be set in vsftpd\u2019s\nconfig file.</p>\n</rendered-html>",
                    "option_type": "path",
                    "option_default": "pkgs.writeText \"userlist\" (concatMapStrings (x: \"${x}\\n\") cfg.userlist)",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "GIDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.virtualUseLocalPrivs",
                    "option_description": "<rendered-html><p>If enabled, virtual users will use the same privileges as local\nusers. By default, virtual users will use the same privileges as\nanonymous users, which tends to be more restrictive (especially in terms\nof write access).</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            },
            {
                "_index": "nixos-42-unstable-693bc46d169f5af9c992095736e82c3488bf7dbb",
                "_type": "_doc",
                "_id": "GYDntpABMU8RZ4DXSGpK",
                "_score": 1.0,
                "_source": {
                    "type": "option",
                    "option_source": "nixos/modules/services/networking/vsftpd.nix",
                    "option_name": "services.vsftpd.writeEnable",
                    "option_description": "<rendered-html><p>Whether any write activity is permitted to users.</p>\n</rendered-html>",
                    "option_type": "boolean",
                    "option_default": "false",
                    "option_example": null,
                    "option_flake": null
                }
            }
        ]
    }
}