{
    "total": {
        "value": 33,
        "relation": "eq"
    },
    "max_score": 1.0,
    "hits": [
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "8NatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.autoSubUidGidRange",
                "option_description": "<rendered-html><p>Automatically allocate subordinate user and group ids for this user.\nAllocated range is currently always of size 65536.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "8datzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.createHome",
                "option_description": "<rendered-html><p>Whether to create the home directory and ensure ownership as well as\npermissions to match the user.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "8tatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.cryptHomeLuks",
                "option_description": "<rendered-html><p>Path to encrypted luks device that contains the user\u2019s home\ndirectory.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "89atzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.description",
                "option_description": "<rendered-html><p>A short description of the user account, typically the user\u2019s full\nname. This is actually the \u201cGECOS\u201d or \u201ccomment\u201d field in <code\nclass=\"interpreted-text\" role=\"file\">/etc/passwd</code>.</p>\n</rendered-html>",
                "option_type": "string, not containing newlines or colons",
                "option_default": "\"\"",
                "option_example": "\"Alice Q. User\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "9NatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.expires",
                "option_description": "<rendered-html><p>Set the date on which the user\u2019s account will no longer be\naccessible. The date is expressed in the format YYYY-MM-DD, or null to\ndisable the expiry. A user whose account is locked must contact the\nsystem administrator before being able to use the system again.</p>\n</rendered-html>",
                "option_type": "null or string matching the pattern [[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2}",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "9datzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.extraGroups",
                "option_description": "<rendered-html><p>The user\u2019s auxiliary groups.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "9tatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.group",
                "option_description": "<rendered-html><p>The user\u2019s primary group.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "99atzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.hashedPassword",
                "option_description": "<rendered-html><p>Specifies the hashed password for the user. The options <code\nclass=\"interpreted-text\" role=\"option\">hashedPassword</code>, <code\nclass=\"interpreted-text\" role=\"option\">password</code> and <code\nclass=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>\ncontrols what password is set for the user. <code\nclass=\"interpreted-text\" role=\"option\">hashedPassword</code> overrides\nboth <code class=\"interpreted-text\" role=\"option\">password</code> and\n<code class=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>.\n<code class=\"interpreted-text\" role=\"option\">password</code> overrides\n<code class=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>.\nIf none of these three options are set, no password is assigned to the\nuser, and the user will not be able to do password logins. If the option\n<code class=\"interpreted-text\" role=\"option\">users.mutableUsers</code>\nis true, the password defined in one of the three options will only be\nset when the user is created for the first time. After that, you are\nfree to change the password with the ordinary user management commands.\nIf <code class=\"interpreted-text\"\nrole=\"option\">users.mutableUsers</code> is false, you cannot change user\npasswords, they will always be set according to the password\noptions.</p>\n<p>To generate a hashed password run <code>mkpasswd</code>.</p>\n<p>If set to an empty string (<code>\"\"</code>), this user will be able\nto log in without being asked for a password (but not via remote\nservices such as SSH, or indirectly via <code class=\"interpreted-text\"\nrole=\"command\">su</code> or <code class=\"interpreted-text\"\nrole=\"command\">sudo</code>). This should only be used for e.g. bootable\nlive systems. Note: this is different from setting an empty password,\nwhich can be achieved using <code class=\"interpreted-text\"\nrole=\"option\">users.users.&lt;name?&gt;.password</code>.</p>\n<p>If set to <code>null</code> (default) this user will not be able to\nlog in using a password (i.e. via <code class=\"interpreted-text\"\nrole=\"command\">login</code> command).</p>\n</rendered-html>",
                "option_type": "null or (string, not containing newlines or colons)",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "-NatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.hashedPasswordFile",
                "option_description": "<rendered-html><p>The full path to a file that contains the hash of the user\u2019s\npassword. The password file is read on each system activation. The file\nshould contain exactly one line, which should be the password in an\nencrypted form that is suitable for the <code>chpasswd -e</code>\ncommand. The options <code class=\"interpreted-text\"\nrole=\"option\">hashedPassword</code>, <code class=\"interpreted-text\"\nrole=\"option\">password</code> and <code class=\"interpreted-text\"\nrole=\"option\">hashedPasswordFile</code> controls what password is set\nfor the user. <code class=\"interpreted-text\"\nrole=\"option\">hashedPassword</code> overrides both <code\nclass=\"interpreted-text\" role=\"option\">password</code> and <code\nclass=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>. <code\nclass=\"interpreted-text\" role=\"option\">password</code> overrides <code\nclass=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>. If\nnone of these three options are set, no password is assigned to the\nuser, and the user will not be able to do password logins. If the option\n<code class=\"interpreted-text\" role=\"option\">users.mutableUsers</code>\nis true, the password defined in one of the three options will only be\nset when the user is created for the first time. After that, you are\nfree to change the password with the ordinary user management commands.\nIf <code class=\"interpreted-text\"\nrole=\"option\">users.mutableUsers</code> is false, you cannot change user\npasswords, they will always be set according to the password\noptions.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "-datzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.home",
                "option_description": "<rendered-html><p>The user\u2019s home directory.</p>\n</rendered-html>",
                "option_type": "path, not containing newlines or colons",
                "option_default": "\"/var/empty\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "-tatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.homeMode",
                "option_description": "<rendered-html><p>The user\u2019s home directory mode in numeric format. See chmod(1). The\nmode is only applied if <code class=\"interpreted-text\"\nrole=\"option\">users.users.&lt;name&gt;.createHome</code> is true.</p>\n</rendered-html>",
                "option_type": "string matching the pattern [0-7]{1,5}",
                "option_default": "\"700\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "-9atzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.ignoreShellProgramCheck",
                "option_description": "<rendered-html><p>By default, nixos will check that programs.SHELL.enable is set to\ntrue if the user has a custom shell specified. If that behavior isn\u2019t\nrequired and there are custom overrides in place to make sure that the\nshell is functional, set this to true.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "_NatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.initialHashedPassword",
                "option_description": "<rendered-html><p>Specifies the initial hashed password for the user, i.e. the hashed\npassword assigned if the user does not already exist. If <code\nclass=\"interpreted-text\" role=\"option\">users.mutableUsers</code> is\ntrue, the password can be changed subsequently using the <code\nclass=\"interpreted-text\" role=\"command\">passwd</code> command.\nOtherwise, it\u2019s equivalent to setting the <code class=\"interpreted-text\"\nrole=\"option\">hashedPassword</code> option.</p>\n<p>Note that the <code class=\"interpreted-text\"\nrole=\"option\">hashedPassword</code> option will override this option if\nboth are set.</p>\n<p>To generate a hashed password run <code>mkpasswd</code>.</p>\n<p>If set to an empty string (<code>\"\"</code>), this user will be able\nto log in without being asked for a password (but not via remote\nservices such as SSH, or indirectly via <code class=\"interpreted-text\"\nrole=\"command\">su</code> or <code class=\"interpreted-text\"\nrole=\"command\">sudo</code>). This should only be used for e.g. bootable\nlive systems. Note: this is different from setting an empty password,\nwhich can be achieved using <code class=\"interpreted-text\"\nrole=\"option\">users.users.&lt;name?&gt;.password</code>.</p>\n<p>If set to <code>null</code> (default) this user will not be able to\nlog in using a password (i.e. via <code class=\"interpreted-text\"\nrole=\"command\">login</code> command).</p>\n</rendered-html>",
                "option_type": "null or (string, not containing newlines or colons)",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "_datzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.initialPassword",
                "option_description": "<rendered-html><p>Specifies the initial password for the user, i.e. the password\nassigned if the user does not already exist. If <code\nclass=\"interpreted-text\" role=\"option\">users.mutableUsers</code> is\ntrue, the password can be changed subsequently using the <code\nclass=\"interpreted-text\" role=\"command\">passwd</code> command.\nOtherwise, it\u2019s equivalent to setting the <code class=\"interpreted-text\"\nrole=\"option\">password</code> option. The same caveat applies: the\npassword specified here is world-readable in the Nix store, so it should\nonly be used for guest accounts or passwords that will be changed\npromptly.</p>\n<p>Note that the <code class=\"interpreted-text\"\nrole=\"option\">password</code> option will override this option if both\nare set.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "_tatzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.isNormalUser",
                "option_description": "<rendered-html><p>Indicates whether this is an account for a \u201creal\u201d user. This\nautomatically sets <code class=\"interpreted-text\"\nrole=\"option\">group</code> to <code>users</code>, <code\nclass=\"interpreted-text\" role=\"option\">createHome</code> to\n<code>true</code>, <code class=\"interpreted-text\"\nrole=\"option\">home</code> to <code class=\"interpreted-text\"\nrole=\"file\">/home/\u00abusername\u00bb</code>, <code class=\"interpreted-text\"\nrole=\"option\">useDefaultShell</code> to <code>true</code>, and <code\nclass=\"interpreted-text\" role=\"option\">isSystemUser</code> to\n<code>false</code>. Exactly one of <code>isNormalUser</code> and\n<code>isSystemUser</code> must be true.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "_9atzZABYW7nGSBMuLMj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.isSystemUser",
                "option_description": "<rendered-html><p>Indicates if the user is a system user or not. This option only has\nan effect if <code class=\"interpreted-text\" role=\"option\">uid</code> is\n<code class=\"interpreted-text\" role=\"option\">null</code>, in which case\nit determines whether the user\u2019s UID is allocated in the range for\nsystem users (below 1000) or in the range for normal users (starting at\n1000). Exactly one of <code>isNormalUser</code> and\n<code>isSystemUser</code> must be true.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "ANatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.linger",
                "option_description": "<rendered-html><p>Whether to enable lingering for this user. If true, systemd user\nunits will start at boot, rather than starting at login and stopping at\nlogout. This is the declarative equivalent of running\n<code>loginctl enable-linger</code> for this user.</p>\n<p>If false, user units will not be started until the user logs in, and\nmay be stopped on logout depending on the settings in\n<code>logind.conf</code>.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "AdatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.name",
                "option_description": "<rendered-html><p>The name of the user account. If undefined, the name of the attribute\nset will be used.</p>\n</rendered-html>",
                "option_type": "string, not containing newlines or colons",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "AtatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/networking/ssh/sshd.nix",
                "option_name": "users.users.<name>.openssh.authorizedKeys.keyFiles",
                "option_description": "<rendered-html><p>A list of files each containing one OpenSSH public key that should be\nadded to the user\u2019s authorized keys. The contents of the files are read\nat build time and added to a file that the SSH daemon reads in addition\nto the the user\u2019s authorized_keys file. You can combine the\n<code>keyFiles</code> and <code>keys</code> options.</p>\n</rendered-html>",
                "option_type": "list of path",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "A9atzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/networking/ssh/sshd.nix",
                "option_name": "users.users.<name>.openssh.authorizedKeys.keys",
                "option_description": "<rendered-html><p>A list of verbatim OpenSSH public keys that should be added to the\nuser\u2019s authorized keys. The keys are added to a file that the SSH daemon\nreads in addition to the the user\u2019s authorized_keys file. You can\ncombine the <code>keys</code> and <code>keyFiles</code> options.\nWarning: If you are using <code>NixOps</code> then don\u2019t use this option\nsince it will replace the key required for deployment via ssh.</p>\n</rendered-html>",
                "option_type": "list of (optionally newline-terminated) single-line string",
                "option_default": "[ ]",
                "option_example": "[\n  \"ssh-rsa AAAAB3NzaC1yc2etc/etc/etcjwrsh8e596z6J0l7 example@host\"\n  \"ssh-ed25519 AAAAC3NzaCetcetera/etceteraJZMfk3QPfQ foo@bar\"\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "BNatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/networking/ssh/sshd.nix",
                "option_name": "users.users.<name>.openssh.authorizedPrincipals",
                "option_description": "<rendered-html><p>A list of verbatim principal names that should be added to the user\u2019s\nauthorized principals.</p>\n</rendered-html>",
                "option_type": "list of (optionally newline-terminated) single-line string",
                "option_default": "[ ]",
                "option_example": "[\n  \"example@host\"\n  \"foo@bar\"\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "BdatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.packages",
                "option_description": "<rendered-html><p>The set of packages that should be made available to the user. This\nis in contrast to <code class=\"interpreted-text\"\nrole=\"option\">environment.systemPackages</code>, which adds packages to\nall users.</p>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": "[ pkgs.firefox pkgs.thunderbird ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "BtatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.pamMount",
                "option_description": "<rendered-html><p>Attributes for user\u2019s entry in <code class=\"interpreted-text\"\nrole=\"file\">pam_mount.conf.xml</code>. Useful attributes might include\n<code>path</code>, <code>options</code>, <code>fstype</code>, and\n<code>server</code>. See <a\nhref=\"https://pam-mount.sourceforge.net/pam_mount.conf.5.html\">https://pam-mount.sourceforge.net/pam_mount.conf.5.html</a>\nfor more information.</p>\n</rendered-html>",
                "option_type": "attribute set of string",
                "option_default": "{ }",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "B9atzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.password",
                "option_description": "<rendered-html><p>Specifies the (clear text) password for the user. Warning: do not set\nconfidential information here because it is world-readable in the Nix\nstore. This option should only be used for public accounts. The options\n<code class=\"interpreted-text\" role=\"option\">hashedPassword</code>,\n<code class=\"interpreted-text\" role=\"option\">password</code> and <code\nclass=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>\ncontrols what password is set for the user. <code\nclass=\"interpreted-text\" role=\"option\">hashedPassword</code> overrides\nboth <code class=\"interpreted-text\" role=\"option\">password</code> and\n<code class=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>.\n<code class=\"interpreted-text\" role=\"option\">password</code> overrides\n<code class=\"interpreted-text\" role=\"option\">hashedPasswordFile</code>.\nIf none of these three options are set, no password is assigned to the\nuser, and the user will not be able to do password logins. If the option\n<code class=\"interpreted-text\" role=\"option\">users.mutableUsers</code>\nis true, the password defined in one of the three options will only be\nset when the user is created for the first time. After that, you are\nfree to change the password with the ordinary user management commands.\nIf <code class=\"interpreted-text\"\nrole=\"option\">users.mutableUsers</code> is false, you cannot change user\npasswords, they will always be set according to the password\noptions.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "CNatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.shell",
                "option_description": "<rendered-html><p>The path to the user\u2019s shell. Can use shell derivations, like\n<code>pkgs.bashInteractive</code>. Don\u2019t forget to enable your shell in\n<code>programs</code> if necessary, like\n<code>programs.zsh.enable = true;</code>.</p>\n</rendered-html>",
                "option_type": "null or package or (path, not containing newlines or colons)",
                "option_default": "pkgs.shadow",
                "option_example": "pkgs.bashInteractive",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "CdatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subGidRanges",
                "option_description": "<rendered-html><p>Subordinate group ids that user is allowed to use. They are set into\n<code class=\"interpreted-text\" role=\"file\">/etc/subgid</code> and are\nused by <code>newgidmap</code> for user namespaces.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": "[\n  {\n    count = 1;\n    startGid = 100;\n  }\n  {\n    count = 999;\n    startGid = 1001;\n  }\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "CtatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subGidRanges.*.count",
                "option_description": "<rendered-html><p>Count of subordinate group ids</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "1",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "C9atzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subGidRanges.*.startGid",
                "option_description": "<rendered-html><p>Start of the range of subordinate group ids that user is allowed to\nuse.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "DNatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subUidRanges",
                "option_description": "<rendered-html><p>Subordinate user ids that user is allowed to use. They are set into\n<code class=\"interpreted-text\" role=\"file\">/etc/subuid</code> and are\nused by <code>newuidmap</code> for user namespaces.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": "[\n  {\n    count = 1;\n    startUid = 1000;\n  }\n  {\n    count = 65534;\n    startUid = 100001;\n  }\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "DdatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subUidRanges.*.count",
                "option_description": "<rendered-html><p>Count of subordinate user ids</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "1",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "DtatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.subUidRanges.*.startUid",
                "option_description": "<rendered-html><p>Start of the range of subordinate user ids that user is allowed to\nuse.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "D9atzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.uid",
                "option_description": "<rendered-html><p>The account UID. If the UID is null, a free UID is picked on\nactivation.</p>\n</rendered-html>",
                "option_type": "null or signed integer",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-1d9c2c9b3e71b9ee663d11c5d298727dace8d374",
            "_type": "_doc",
            "_id": "ENatzZABYW7nGSBMuLQj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/users-groups.nix",
                "option_name": "users.users.<name>.useDefaultShell",
                "option_description": "<rendered-html><p>If true, the user\u2019s shell will be set to <code\nclass=\"interpreted-text\"\nrole=\"option\">users.defaultUserShell</code>.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        }
    ]
}