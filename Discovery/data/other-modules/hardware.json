{
    "total": {
        "value": 284,
        "relation": "eq"
    },
    "max_score": 1.0,
    "hits": [
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_IPL3JABMU8RZ4DXfk9j",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/acpilight.nix",
                "option_name": "hardware.acpilight.enable",
                "option_description": "<rendered-html><p>Enable acpilight. This will allow brightness control via xbacklight\nfrom users in the video group</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_YPL3JABMU8RZ4DXfk9j",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/audio/alsa.nix",
                "option_name": "hardware.alsa.enablePersistence",
                "option_description": "<rendered-html><p>Whether to enable ALSA sound card state saving on shutdown. This is\ngenerally not necessary if you\u2019re using an external sound server.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_oPL3JABMU8RZ4DXfk9j",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.enable",
                "option_description": "<rendered-html><p>Whether to enable AMDVLK Vulkan driver.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_4PL3JABMU8RZ4DXfk9j",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.package",
                "option_description": "<rendered-html><p>The amdvlk package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.amdvlk",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "AIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.settings",
                "option_description": "<rendered-html><p>Runtime settings for AMDVLK to be configured <code\nclass=\"interpreted-text\"\nrole=\"file\">/etc/amd/amdVulkanSettings.cfg</code>. See <a\nhref=\"https://github.com/GPUOpen-Drivers/AMDVLK?tab=readme-ov-file#runtime-settings\">AMDVLK\nGitHub page</a>.</p>\n</rendered-html>",
                "option_type": "attribute set of (string or signed integer)",
                "option_default": "{ }",
                "option_example": "{\n  AllowVkPipelineCachingToDisk = 1;\n  EnableVmAlwaysValid = 1;\n  IFH = 0;\n  IdleAfterSubmitGpuMask = 1;\n  ShaderCacheMode = 1;\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "AYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.support32Bit.enable",
                "option_description": "<rendered-html><p>Whether to enable 32-bit driver support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "AoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.support32Bit.package",
                "option_description": "<rendered-html><p>The amdvlk package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.driversi686Linux.amdvlk",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "A4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdvlk.nix",
                "option_name": "hardware.amdgpu.amdvlk.supportExperimental.enable",
                "option_description": "<rendered-html><p>Whether to enable Experimental features support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "BIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdgpu.nix",
                "option_name": "hardware.amdgpu.initrd.enable",
                "option_description": "<rendered-html><p>Whether to enable loading <code>amdgpu</code> kernelModule in stage\n1. Can fix lower resolution in boot screen during initramfs phase .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "BYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdgpu.nix",
                "option_name": "hardware.amdgpu.legacySupport.enable",
                "option_description": "<rendered-html><p>Whether to enable using <code>amdgpu</code> kernel driver instead of\n<code>radeon</code> for Southern Islands (Radeon HD 7000) series and Sea\nIslands (Radeon HD 8000) series cards. Note: this removes support for\nanalog video outputs, which is only available in the <code>radeon</code>\ndriver .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "BoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/amdgpu.nix",
                "option_name": "hardware.amdgpu.opencl.enable",
                "option_description": "<rendered-html><p>Whether to enable OpenCL support using ROCM runtime library.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "B4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/bladeRF.nix",
                "option_name": "hardware.bladeRF.enable",
                "option_description": "<rendered-html><p>Enables udev rules for BladeRF devices. By default grants access to\nusers in the \u201cbladerf\u201d group. You may want to install the libbladeRF\npackage.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "CIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.disabledPlugins",
                "option_description": "<rendered-html><p>Built-in plugins to disable</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "CYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.enable",
                "option_description": "<rendered-html><p>Whether to enable support for Bluetooth.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "CoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.hsphfpd.enable",
                "option_description": "<rendered-html><p>Whether to enable support for hsphfpd[-prototype] implementation.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "C4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.input",
                "option_description": "<rendered-html><p>Set configuration for the input service\n(/etc/bluetooth/input.conf).</p>\n</rendered-html>",
                "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                "option_default": "{ }",
                "option_example": "{\n  General = {\n    ClassicBondedOnly = true;\n    IdleTimeout = 30;\n  };\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "DIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.network",
                "option_description": "<rendered-html><p>Set configuration for the network service\n(/etc/bluetooth/network.conf).</p>\n</rendered-html>",
                "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                "option_default": "{ }",
                "option_example": "{\n  General = {\n    DisableSecurity = true;\n  };\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "DYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.package",
                "option_description": "<rendered-html><p>The bluez package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.bluez",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "DoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.powerOnBoot",
                "option_description": "<rendered-html><p>Whether to power up the default Bluetooth controller on boot.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "D4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bluetooth.nix",
                "option_name": "hardware.bluetooth.settings",
                "option_description": "<rendered-html><p>Set configuration for system-wide bluetooth\n(/etc/bluetooth/main.conf).</p>\n</rendered-html>",
                "option_type": "attribute set of section of an INI file (attrs of INI atom (null, bool, int, float or string))",
                "option_default": "{ }",
                "option_example": "{\n  General = {\n    ControllerMode = \"bredr\";\n  };\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "EIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/brillo.nix",
                "option_name": "hardware.brillo.enable",
                "option_description": "<rendered-html><p>Whether to enable brillo in userspace. This will allow brightness\ncontrol from users in the video group .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "EYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/bumblebee.nix",
                "option_name": "hardware.bumblebee.connectDisplay",
                "option_description": "<rendered-html><p>Set to true if you intend to connect your discrete card to a monitor.\nThis option will set up your Nvidia card for EDID discovery and to turn\non the monitor signal.</p>\n<p>Only nvidia driver is supported so far.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "EoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/bumblebee.nix",
                "option_name": "hardware.bumblebee.driver",
                "option_description": "<rendered-html><p>Set driver used by bumblebeed. Supported are nouveau and nvidia.</p>\n</rendered-html>",
                "option_type": "one of \"nvidia\", \"nouveau\"",
                "option_default": "\"nvidia\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "E4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/bumblebee.nix",
                "option_name": "hardware.bumblebee.enable",
                "option_description": "<rendered-html><p>Enable the bumblebee daemon to manage Optimus hybrid video cards.\nThis should power off secondary GPU until its use is requested by\nrunning an application with optirun.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "FIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/bumblebee.nix",
                "option_name": "hardware.bumblebee.group",
                "option_description": "<rendered-html><p>Group for bumblebee socket</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"wheel\"",
                "option_example": "\"video\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "FYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/bumblebee.nix",
                "option_name": "hardware.bumblebee.pmMethod",
                "option_description": "<rendered-html><p>Set preferred power management method for unused card.</p>\n</rendered-html>",
                "option_type": "one of \"auto\", \"bbswitch\", \"switcheroo\", \"none\"",
                "option_default": "\"auto\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "FoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ckb-next.nix",
                "option_name": "hardware.ckb-next.enable",
                "option_description": "<rendered-html><p>Whether to enable the Corsair keyboard/mouse driver.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "F4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ckb-next.nix",
                "option_name": "hardware.ckb-next.gid",
                "option_description": "<rendered-html><p>Limit access to the ckb daemon to a particular group.</p>\n</rendered-html>",
                "option_type": "null or signed integer",
                "option_default": "null",
                "option_example": "100",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "GIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ckb-next.nix",
                "option_name": "hardware.ckb-next.package",
                "option_description": "<rendered-html><p>The ckb-next package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.ckb-next",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "GYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-ryzen-smu.nix",
                "option_name": "hardware.cpu.amd.ryzen-smu.enable",
                "option_description": "<rendered-html><p>Whether to enable ryzen_smu, a linux kernel driver that exposes\naccess to the SMU (System Management Unit) for certain AMD Ryzen\nProcessors.</p>\n<p>WARNING: Damage cause by use of your AMD processor outside of\nofficial AMD specifications or outside of factory settings are not\ncovered under any AMD product warranty and may not be covered by your\nboard or system manufacturer\u2019s warranty .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "GoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sev.enable",
                "option_description": "<rendered-html><p>Whether to enable access to the AMD SEV device.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "G4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sev.group",
                "option_description": "<rendered-html><p>Group to assign to the SEV device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"sev\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "HIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sev.mode",
                "option_description": "<rendered-html><p>Mode to set for the SEV device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"0660\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "HYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sev.user",
                "option_description": "<rendered-html><p>Owner to assign to the SEV device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"root\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "HoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sevGuest.enable",
                "option_description": "<rendered-html><p>Whether to enable access to the AMD SEV guest device.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "H4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sevGuest.group",
                "option_description": "<rendered-html><p>Group to assign to the SEV guest device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"sev-guest\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "IIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sevGuest.mode",
                "option_description": "<rendered-html><p>Mode to set for the SEV guest device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"0660\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "IYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-sev.nix",
                "option_name": "hardware.cpu.amd.sevGuest.user",
                "option_description": "<rendered-html><p>Owner to assign to the SEV guest device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"root\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "IoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/amd-microcode.nix",
                "option_name": "hardware.cpu.amd.updateMicrocode",
                "option_description": "<rendered-html><p>Update the CPU microcode for AMD processors.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "I4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-sgx.nix",
                "option_name": "hardware.cpu.intel.sgx.enableDcapCompat",
                "option_description": "<rendered-html><p>Whether to enable backward compatibility for SGX software build for\nthe out-of-tree Intel SGX DCAP driver.</p>\n<p>Creates symbolic links for the SGX devices\n<code>/dev/sgx_enclave</code> and <code>/dev/sgx_provision</code> to\nmake them available as <code>/dev/sgx/enclave</code> and\n<code>/dev/sgx/provision</code>, respectively.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "JIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-sgx.nix",
                "option_name": "hardware.cpu.intel.sgx.provision.enable",
                "option_description": "<rendered-html><p>Whether to enable access to the Intel SGX provisioning device.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "JYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-sgx.nix",
                "option_name": "hardware.cpu.intel.sgx.provision.group",
                "option_description": "<rendered-html><p>Group to assign to the SGX provisioning device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"sgx_prv\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "JoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-sgx.nix",
                "option_name": "hardware.cpu.intel.sgx.provision.mode",
                "option_description": "<rendered-html><p>Mode to set for the SGX provisioning device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"0660\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "J4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-sgx.nix",
                "option_name": "hardware.cpu.intel.sgx.provision.user",
                "option_description": "<rendered-html><p>Owner to assign to the SGX provisioning device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"root\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "KIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/intel-microcode.nix",
                "option_name": "hardware.cpu.intel.updateMicrocode",
                "option_description": "<rendered-html><p>Update the CPU microcode for Intel processors.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "KYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.enable",
                "option_description": "<rendered-html><p>Whether to enable the <code>msr</code> (Model-Specific Registers)\nkernel module and configure <code>udev</code> rules for its devices\n(usually <code>/dev/cpu/*/msr</code>).</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "KoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.group",
                "option_description": "<rendered-html><p>Group to set for devices of the <code>msr</code> kernel\nsubsystem.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"msr\"",
                "option_example": "\"nobody\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "K4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.mode",
                "option_description": "<rendered-html><p>Mode to set for devices of the <code>msr</code> kernel subsystem.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"0640\"",
                "option_example": "\"0660\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "LIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.owner",
                "option_description": "<rendered-html><p>Owner to set for devices of the <code>msr</code> kernel\nsubsystem.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"root\"",
                "option_example": "\"nobody\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "LYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.settings",
                "option_description": "<rendered-html><p>Parameters for the <code>msr</code> kernel module.</p>\n</rendered-html>",
                "option_type": "attribute set of (boolean or signed integer or string)",
                "option_default": "{ }",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "LoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/cpu/x86-msr.nix",
                "option_name": "hardware.cpu.x86.msr.settings.allow-writes",
                "option_description": "<rendered-html><p>Whether to allow writes to MSRs (<code>\"on\"</code>) or not\n(<code>\"off\"</code>).</p>\n</rendered-html>",
                "option_type": "null or one of \"on\", \"off\"",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "L4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/decklink.nix",
                "option_name": "hardware.decklink.enable",
                "option_description": "<rendered-html><p>Whether to enable hardware support for the Blackmagic Design Decklink\naudio/video interfaces.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "MIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.dtbSource",
                "option_description": "<rendered-html><p>Path to dtb directory that overlays and other processing will be\napplied to. Uses device trees bundled with the Linux kernel by\ndefault.</p>\n</rendered-html>",
                "option_type": "path",
                "option_default": "${cfg.kernelPackage}/dtbs",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "MYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.dtboBuildExtraIncludePaths",
                "option_description": "<rendered-html><p>Additional include paths that will be passed to the preprocessor when\ncreating the final .dts to compile into .dtbo</p>\n</rendered-html>",
                "option_type": "list of path",
                "option_default": "[ ]",
                "option_example": "[\n  ./my_custom_include_dir_1\n  ./custom_include_dir_2\n]\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "MoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.dtboBuildExtraPreprocessorFlags",
                "option_description": "<rendered-html><p>Additional flags to pass to the preprocessor during dtbo\ncompilations</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": "[ \"-DMY_DTB_DEFINE\" ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "M4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.enable",
                "option_description": "<rendered-html><p>Build device tree files. These are used to describe the\nnon-discoverable hardware of a system.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "NIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.filter",
                "option_description": "<rendered-html><p>Only include .dtb files matching glob expression.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"*rpi*.dtb\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "NYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.kernelPackage",
                "option_description": "<rendered-html><p>Kernel package where device tree include directory is from. Also used\nas default source of dtb package to apply overlays to</p>\n</rendered-html>",
                "option_type": "path",
                "option_default": "config.boot.kernelPackages.kernel",
                "option_example": "pkgs.linux_latest",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "NoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.name",
                "option_description": "<rendered-html><p>The name of an explicit dtb to be loaded, relative to the dtb base.\nUseful in extlinux scenarios if the bootloader doesn\u2019t pick the right\n.dtb file from FDTDIR.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"some-dtb.dtb\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "N4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays",
                "option_description": "<rendered-html><p>List of overlays to apply to base device-tree (.dtb) files.</p>\n</rendered-html>",
                "option_type": "list of ((submodule) or path convertible to it)",
                "option_default": "[ ]",
                "option_example": "[\n  { name = \"pps\"; dtsFile = ./dts/pps.dts; }\n  { name = \"spi\";\n    dtsText = \"...\";\n  }\n  { name = \"precompiled\"; dtboFile = ./dtbos/example.dtbo; }\n]\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "OIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays.*.dtboFile",
                "option_description": "<rendered-html><p>Path to .dtbo compiled overlay file.</p>\n</rendered-html>",
                "option_type": "null or path",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "OYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays.*.dtsFile",
                "option_description": "<rendered-html><p>Path to .dts overlay file, overlay is applied to each .dtb file\nmatching \u201ccompatible\u201d of the overlay.</p>\n</rendered-html>",
                "option_type": "null or path",
                "option_default": "null",
                "option_example": "./dts/overlays.dts",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "OoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays.*.dtsText",
                "option_description": "<rendered-html><p>Literal DTS contents, overlay is applied to each .dtb file matching\n\u201ccompatible\u201d of the overlay.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "''\n  /dts-v1/;\n  /plugin/;\n  / {\n          compatible = \"raspberrypi\";\n  };\n  &{/soc} {\n          pps {\n                  compatible = \"pps-gpio\";\n                  status = \"okay\";\n          };\n  };\n''",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "O4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays.*.filter",
                "option_description": "<rendered-html><p>Only apply to .dtb files matching glob expression.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"*rpi*.dtb\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "PIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/device-tree.nix",
                "option_name": "hardware.deviceTree.overlays.*.name",
                "option_description": "<rendered-html><p>Name of this overlay</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "PYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/digitalbitbox.nix",
                "option_name": "hardware.digitalbitbox.enable",
                "option_description": "<rendered-html><p>Enables udev rules for Digital Bitbox devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "PoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/digitalbitbox.nix",
                "option_name": "hardware.digitalbitbox.package",
                "option_description": "<rendered-html><p>The digitalbitbox package to use. This can be used to install a\npackage with udev rules that differ from the defaults.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.digitalbitbox",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "P4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.edid.enable",
                "option_description": "<rendered-html><p>Enables handling of EDID files</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "config.hardware.display.edid.packages != null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "QIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.edid.linuxhw",
                "option_description": "<rendered-html><p>Exposes EDID files from users-sourced database at <a\nhref=\"https://github.com/linuxhw/EDID\">https://github.com/linuxhw/EDID</a></p>\n<p>Attribute names will be mapped to EDID filenames\n<code>&lt;NAME&gt;.bin</code>.</p>\n<p>Attribute values are lists of <code>awk</code> regexp patterns that\n(together) must match exactly one line in either of:</p>\n<ul>\n<li><a\nhref=\"https://raw.githubusercontent.com/linuxhw/EDID/master/AnalogDisplay.md\">AnalogDisplay.md</a></li>\n<li><a\nhref=\"https://raw.githubusercontent.com/linuxhw/EDID/master/DigitalDisplay.md\">DigitalDisplay.md</a></li>\n</ul>\n<p>There is no universal way of locating your device config, but here\nare some practical tips:</p>\n<ol type=\"1\">\n<li>locate your device:</li>\n</ol>\n<ul>\n<li>find your model number (second column)</li>\n<li>locate manufacturer (first column) and go through the list\nmanually</li>\n</ul>\n<ol start=\"2\" type=\"1\">\n<li>narrow down results using other columns until there is only one\nleft:</li>\n</ol>\n<ul>\n<li><code>Name</code> column</li>\n<li>production date (<code>Made</code> column)</li>\n<li>resolution <code>Res</code></li>\n<li>screen diagonal (<code>Inch</code> column)</li>\n<li>as a last resort use <code>ID</code> from the last column</li>\n</ul>\n</rendered-html>",
                "option_type": "attribute set of list of string",
                "option_default": "{ }",
                "option_example": "{\n  PG278Q_2014 = [ \"PG278Q\" \"2014\" ];\n}\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "QYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.edid.modelines",
                "option_description": "<rendered-html><p>Attribute set of XFree86 Modelines automatically converted and\nexposed as <code>edid/&lt;name&gt;.bin</code> files in initrd. See for\nmore information:</p>\n<ul>\n<li><a\nhref=\"https://en.wikipedia.org/wiki/XFree86_Modeline\">https://en.wikipedia.org/wiki/XFree86_Modeline</a></li>\n</ul>\n</rendered-html>",
                "option_type": "attribute set of string",
                "option_default": "{ }",
                "option_example": "{\n  \"PG278Q_60\" = \"    241.50   2560 2608 2640 2720   1440 1443 1448 1481   -hsync +vsync\";\n  \"PG278Q_120\" = \"   497.75   2560 2608 2640 2720   1440 1443 1448 1525   +hsync -vsync\";\n  \"U2711_60\" = \"     241.50   2560 2600 2632 2720   1440 1443 1448 1481   -hsync +vsync\";\n}\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "QoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.edid.packages",
                "option_description": "<rendered-html><p>List of packages containing EDID binary files at\n<code>$out/lib/firmware/edid</code>. Such files will be available for\nuse in <code>drm.edid_firmware</code> kernel parameter as\n<code>edid/&lt;filename&gt;</code>.</p>\n<p>You can craft one directly here or use sibling options\n<code>linuxhw</code> and <code>modelines</code>.</p>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": "[\n  (pkgs.runCommand \"edid-custom\" {} ''\n    mkdir -p \"$out/lib/firmware/edid\"\n    base64 -d > \"$out/lib/firmware/edid/custom1.bin\" <<'EOF'\n    <insert your base64 encoded EDID file here `base64 < /sys/class/drm/card0-.../edid`>\n    EOF\n  '')\n]\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "Q4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.outputs",
                "option_description": "<rendered-html><p>Hardware/kernel-level configuration of specific outputs.</p>\n</rendered-html>",
                "option_type": "attribute set of (submodule)",
                "option_default": "{ }",
                "option_example": "{\n  edid.modelines.\"PG278Q_60\" = \"241.50   2560 2608 2640 2720   1440 1443 1448 1481   -hsync +vsync\";\n  outputs.\"DP-1\".edid = \"PG278Q_60.bin\";\n  outputs.\"DP-1\".mode = \"e\";\n}\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "RIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.outputs.<name>.edid",
                "option_description": "<rendered-html><p>An EDID filename to be used for configured display, as in\n<code>edid/&lt;filename&gt;</code>. See for more information:</p>\n<ul>\n<li><code>hardware.display.edid.packages</code></li>\n<li><a\nhref=\"https://wiki.archlinux.org/title/Kernel_mode_setting#Forcing_modes_and_EDID\">https://wiki.archlinux.org/title/Kernel_mode_setting#Forcing_modes_and_EDID</a></li>\n</ul>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "RYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/display.nix",
                "option_name": "hardware.display.outputs.<name>.mode",
                "option_description": "<rendered-html><p>A <code>video</code> kernel parameter (framebuffer mode)\nconfiguration for the specific output:</p>\n<pre><code>&lt;xres&gt;x&lt;yres&gt;[M][R][-&lt;bpp&gt;][@&lt;refresh&gt;][i][m][eDd]</code></pre>\n<p>See for more information:</p>\n<ul>\n<li><a\nhref=\"https://docs.kernel.org/fb/modedb.html\">https://docs.kernel.org/fb/modedb.html</a></li>\n<li><a\nhref=\"https://wiki.archlinux.org/title/Kernel_mode_setting#Forcing_modes\">https://wiki.archlinux.org/title/Kernel_mode_setting#Forcing_modes</a></li>\n</ul>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"e\"\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "RoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/all-firmware.nix",
                "option_name": "hardware.enableAllFirmware",
                "option_description": "<rendered-html><p>Whether to enable all firmware regardless of license.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "R4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/all-firmware.nix",
                "option_name": "hardware.enableRedistributableFirmware",
                "option_description": "<rendered-html><p>Whether to enable firmware with a license allowing\nredistribution.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "config.hardware.enableAllFirmware",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "SIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/webcam/facetimehd.nix",
                "option_name": "hardware.facetimehd.enable",
                "option_description": "<rendered-html><p>Whether to enable the facetimehd kernel module.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "SYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/webcam/facetimehd.nix",
                "option_name": "hardware.facetimehd.withCalibration",
                "option_description": "<rendered-html><p>Whether to include sensor calibration files for facetimehd. This\nmakes colors look much better but is experimental, see <a\nhref=\"https://github.com/patjak/facetimehd/wiki/Extracting-the-sensor-calibration-files\">https://github.com/patjak/facetimehd/wiki/Extracting-the-sensor-calibration-files</a>\nfor details.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "SoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/fancontrol.nix",
                "option_name": "hardware.fancontrol.config",
                "option_description": "<rendered-html><p>Required fancontrol configuration file content. See <code\nclass=\"interpreted-text\" role=\"manpage\">pwmconfig(8)</code> from the\nlm_sensors package.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": null,
                "option_example": "''\n  # Configuration file generated by pwmconfig\n  INTERVAL=10\n  DEVPATH=hwmon3=devices/virtual/thermal/thermal_zone2 hwmon4=devices/platform/f71882fg.656\n  DEVNAME=hwmon3=soc_dts1 hwmon4=f71869a\n  FCTEMPS=hwmon4/device/pwm1=hwmon3/temp1_input\n  FCFANS=hwmon4/device/pwm1=hwmon4/device/fan1_input\n  MINTEMP=hwmon4/device/pwm1=35\n  MAXTEMP=hwmon4/device/pwm1=65\n  MINSTART=hwmon4/device/pwm1=150\n  MINSTOP=hwmon4/device/pwm1=0\n''",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "S4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/fancontrol.nix",
                "option_name": "hardware.fancontrol.enable",
                "option_description": "<rendered-html><p>Whether to enable software fan control (requires\nfancontrol.config).</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "TIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/udev.nix",
                "option_name": "hardware.firmware",
                "option_description": "<rendered-html><p>List of packages containing firmware files. Such files will be loaded\nautomatically if the kernel asks for them (i.e., when it has detected\nspecific hardware that requires firmware to function). If multiple\npackages contain firmware files with the same name, the first package in\nthe list takes precedence. Note that you must rebuild your system if you\nadd files to any of these directories.</p>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "TYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/flipperzero.nix",
                "option_name": "hardware.flipperzero.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules and software for Flipper Zero\ndevices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ToPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/flirc.nix",
                "option_name": "hardware.flirc.enable",
                "option_description": "<rendered-html><p>Whether to enable software to configure a Flirc USB device.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "T4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/gkraken.nix",
                "option_name": "hardware.gkraken.enable",
                "option_description": "<rendered-html><p>Whether to enable gkraken\u2019s udev rules for NZXT AIO liquid\ncoolers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "UIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/glasgow.nix",
                "option_name": "hardware.glasgow.enable",
                "option_description": "<rendered-html><p>Enables Glasgow udev rules and ensures \u2018plugdev\u2019 group exists. This\nis a prerequisite to using Glasgow without being root.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "UYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/gpgsmartcards.nix",
                "option_name": "hardware.gpgSmartcards.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules for gnupg smart cards.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "UoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/graphics.nix",
                "option_name": "hardware.graphics.enable",
                "option_description": "<rendered-html><p>Whether to enable hardware accelerated graphics drivers.</p>\n<p>This is required to allow most graphical applications and\nenvironments to use hardware rendering, video encode/decode\nacceleration, etc.</p>\n<p>This option should be enabled by default by the corresponding\nmodules, so you do not usually have to set it yourself.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "U4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/graphics.nix",
                "option_name": "hardware.graphics.enable32Bit",
                "option_description": "<rendered-html><p>On 64-bit systems, whether to also install 32-bit drivers for 32-bit\napplications (such as Wine).</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "VIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/graphics.nix",
                "option_name": "hardware.graphics.extraPackages",
                "option_description": "<rendered-html><p>Additional packages to add to the default graphics driver lookup\npath. This can be used to add OpenCL drivers, VA-API/VDPAU drivers,\netc.</p>\n<div class=\"note\">\n<p>intel-media-driver supports hardware Broadwell (2014) or newer. Older\nhardware should use the mostly unmaintained intel-vaapi-driver\ndriver.</p>\n</div>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": "with pkgs; [ intel-media-driver intel-ocl intel-vaapi-driver ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "VYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/graphics.nix",
                "option_name": "hardware.graphics.extraPackages32",
                "option_description": "<rendered-html><p>Additional packages to add to 32-bit graphics driver lookup path on\n64-bit systems. Used when <code class=\"interpreted-text\"\nrole=\"option\">enable32Bit</code> is set. This can be used to add OpenCL\ndrivers, VA-API/VDPAU drivers, etc.</p>\n<div class=\"note\">\n<p>intel-media-driver supports hardware Broadwell (2014) or newer. Older\nhardware should use the mostly unmaintained intel-vaapi-driver\ndriver.</p>\n</div>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": "with pkgs.pkgsi686Linux; [ intel-media-driver intel-vaapi-driver ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "VoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/hackrf.nix",
                "option_name": "hardware.hackrf.enable",
                "option_description": "<rendered-html><p>Enables hackrf udev rules and ensures \u2018plugdev\u2019 group exists. This is\na prerequisite to using HackRF devices without being root, since HackRF\nUSB descriptors will be owned by plugdev through udev.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "V4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/i2c.nix",
                "option_name": "hardware.i2c.enable",
                "option_description": "<rendered-html><p>Whether to enable i2c devices support. By default access is granted\nto users in the \u201ci2c\u201d group (will be created if non-existent) and any\nuser with a seat, meaning logged on the computer locally .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "WIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/i2c.nix",
                "option_name": "hardware.i2c.group",
                "option_description": "<rendered-html><p>Grant access to i2c devices (/dev/i2c-*) to users in this group.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"i2c\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "WYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/infiniband.nix",
                "option_name": "hardware.infiniband.enable",
                "option_description": "<rendered-html><p>Whether to enable Infiniband support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "WoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/infiniband.nix",
                "option_name": "hardware.infiniband.guids",
                "option_description": "<rendered-html><p>A list of infiniband port guids on the system. This is discoverable\nusing <code>ibstat -p</code></p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": "[\n  \"0xe8ebd30000eee2e1\"\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "W4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/intel-gpu-tools.nix",
                "option_name": "hardware.intel-gpu-tools.enable",
                "option_description": "<rendered-html><p>Whether to enable a setcap wrapper for intel-gpu-tools.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "XIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/webcam/ipu6.nix",
                "option_name": "hardware.ipu6.enable",
                "option_description": "<rendered-html><p>Whether to enable support for Intel IPU6/MIPI cameras.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "XYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/webcam/ipu6.nix",
                "option_name": "hardware.ipu6.platform",
                "option_description": "<rendered-html><p>Choose the version for your hardware platform.</p>\n<p>Use <code>ipu6</code> for Tiger Lake, <code>ipu6ep</code> for Alder\nLake or Raptor Lake, and <code>ipu6epmtl</code> for Meteor Lake.</p>\n</rendered-html>",
                "option_type": "one of \"ipu6\", \"ipu6ep\", \"ipu6epmtl\"",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "XoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/keyboard/qmk.nix",
                "option_name": "hardware.keyboard.qmk.enable",
                "option_description": "<rendered-html><p>Whether to enable non-root access to the firmware of QMK\nkeyboards.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "X4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/keyboard/teck.nix",
                "option_name": "hardware.keyboard.teck.enable",
                "option_description": "<rendered-html><p>Whether to enable non-root access to the firmware of TECK\nkeyboards.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "YIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/keyboard/uhk.nix",
                "option_name": "hardware.keyboard.uhk.enable",
                "option_description": "<rendered-html><p>Whether to enable non-root access to the firmware of UHK keyboards.\nYou need it when you want to flash a new firmware on the keyboard.\nAccess to the keyboard is granted to users in the \u201cinput\u201d group. You may\nwant to install the uhk-agent package .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "YYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/keyboard/zsa.nix",
                "option_name": "hardware.keyboard.zsa.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules for keyboards from ZSA like the ErgoDox\nEZ, Planck EZ and Moonlander Mark I. You need it when you want to flash\na new configuration on the keyboard or use their live training in the\nbrowser. You may want to install the wally-cli package .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "YoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ksm.nix",
                "option_name": "hardware.ksm.enable",
                "option_description": "<rendered-html><p>Whether to enable Linux kernel Same-Page Merging.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "Y4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ksm.nix",
                "option_name": "hardware.ksm.sleep",
                "option_description": "<rendered-html><p>How many milliseconds ksmd should sleep between scans. Setting it to\n<code>null</code> uses the kernel\u2019s default time.</p>\n</rendered-html>",
                "option_type": "null or signed integer",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ZIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ledger.nix",
                "option_name": "hardware.ledger.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules for Ledger devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ZYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/logitech.nix",
                "option_name": "hardware.logitech.lcd.devices",
                "option_description": "<rendered-html><p>List of USB device ids supported by g15daemon.</p>\n<p>You most likely do not need to change this.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[\n  \"0a07\"\n  \"c222\"\n  \"c225\"\n  \"c227\"\n  \"c251\"\n]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ZoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/logitech.nix",
                "option_name": "hardware.logitech.lcd.enable",
                "option_description": "<rendered-html><p>Whether to enable support for Logitech LCD Devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "Z4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/logitech.nix",
                "option_name": "hardware.logitech.lcd.startWhenNeeded",
                "option_description": "<rendered-html><p>Only run the service when an actual supported device is plugged.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "aIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/logitech.nix",
                "option_name": "hardware.logitech.wireless.enable",
                "option_description": "<rendered-html><p>Whether to enable support for Logitech Wireless Devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "aYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/logitech.nix",
                "option_name": "hardware.logitech.wireless.enableGraphical",
                "option_description": "<rendered-html><p>Enable graphical support applications.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "aoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/mcelog.nix",
                "option_name": "hardware.mcelog.enable",
                "option_description": "<rendered-html><p>Enable the Machine Check Exception logger.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "a4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/capture/mwprocapture.nix",
                "option_name": "hardware.mwProCapture.enable",
                "option_description": "<rendered-html><p>Whether to enable the Magewell Pro Capture family kernel module.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "bIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/new-lg4ff.nix",
                "option_name": "hardware.new-lg4ff.enable",
                "option_description": "<rendered-html><p>Enables improved Linux module drivers for Logitech driving wheels.\nThis will replace the existing in-kernel hid-logitech modules. Works\nmost notably on the Logitech G25, G27, G29 and Driving Force (GT).</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "bYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/nitrokey.nix",
                "option_name": "hardware.nitrokey.enable",
                "option_description": "<rendered-html><p>Enables udev rules for Nitrokey devices. By default grants access to\nusers in the \u201cnitrokey\u201d group. You may want to install the nitrokey-app\npackage, depending on your device and needs.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "boPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.datacenter.enable",
                "option_description": "<rendered-html><p>Whether to enable Data Center drivers for NVIDIA cards on a NVLink\ntopology .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "b4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.datacenter.settings",
                "option_description": "<rendered-html><p>Additional configuration options for fabricmanager.</p>\n</rendered-html>",
                "option_type": "attribute set of (atom (null, bool, int, float or string))",
                "option_default": "{\n  LOG_LEVEL=4;\n  LOG_FILE_NAME=\"/var/log/fabricmanager.log\";\n  LOG_APPEND_TO_LOG=1;\n  LOG_FILE_MAX_SIZE=1024;\n  LOG_USE_SYSLOG=0;\n  DAEMONIZE=1;\n  BIND_INTERFACE_IP=\"127.0.0.1\";\n  STARTING_TCP_PORT=16000;\n  FABRIC_MODE=0;\n  FABRIC_MODE_RESTART=0;\n  STATE_FILE_NAME=\"/var/tmp/fabricmanager.state\";\n  FM_CMD_BIND_INTERFACE=\"127.0.0.1\";\n  FM_CMD_PORT_NUMBER=6666;\n  FM_STAY_RESIDENT_ON_FAILURES=0;\n  ACCESS_LINK_FAILURE_MODE=0;\n  TRUNK_LINK_FAILURE_MODE=0;\n  NVSWITCH_FAILURE_MODE=0;\n  ABORT_CUDA_JOBS_ON_FM_EXIT=1;\n}\n",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "cIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.dynamicBoost.enable",
                "option_description": "<rendered-html><p>Whether to enable dynamic Boost balances power between the CPU and\nthe GPU for improved performance on supported laptops using the\nnvidia-powerd daemon. For more information, see the NVIDIA docs, on\nChapter 23. Dynamic Boost on Linux .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "cYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.forceFullCompositionPipeline",
                "option_description": "<rendered-html><p>Whether to enable forcefully the full composition pipeline. This\nsometimes fixes screen tearing issues. This has been reported to reduce\nthe performance of some OpenGL applications and may produce issues in\nWebGL. It also drastically increases the time the driver needs to clock\ndown after load .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "coPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.modesetting.enable",
                "option_description": "<rendered-html><p>Whether to enable kernel modesetting when using the NVIDIA\nproprietary driver.</p>\n<p>Enabling this fixes screen tearing when using Optimus via PRIME (see\n<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.sync.enable</code>. This is not\nenabled by default because it is not officially supported by NVIDIA and\nwould not work with SLI.</p>\n<p>Enabling this and using version 545 or newer of the proprietary\nNVIDIA driver causes it to provide its own framebuffer device, which can\ncause Wayland compositors to work when they otherwise wouldn\u2019t. .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "c4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.nvidiaPersistenced",
                "option_description": "<rendered-html><p>Whether to enable nvidia-persistenced a update for NVIDIA GPU\nheadless mode, i.e. It ensures all GPUs stay awake even during headless\nmode .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "dIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.nvidiaSettings",
                "option_description": "<rendered-html><p>Whether to enable nvidia-settings, NVIDIA\u2019s GUI configuration tool\n.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "dYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.open",
                "option_description": "<rendered-html><p>Whether to enable the open source NVIDIA kernel module .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "doPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.package",
                "option_description": "<rendered-html><p>The NVIDIA driver package to use.</p>\n</rendered-html>",
                "option_type": "unspecified value",
                "option_default": "config.boot.kernelPackages.nvidiaPackages.\"\\$\\{if cfg.datacenter.enable then \"dc\" else \"stable\"}\"\n",
                "option_example": "\"config.boot.kernelPackages.nvidiaPackages.legacy_470\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "d4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.powerManagement.enable",
                "option_description": "<rendered-html><p>Whether to enable experimental power management through systemd. For\nmore information, see the NVIDIA docs, on Chapter 21. Configuring Power\nManagement Support .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "eIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.powerManagement.finegrained",
                "option_description": "<rendered-html><p>Whether to enable experimental power management of PRIME offload. For\nmore information, see the NVIDIA docs, on Chapter 22. PCI-Express\nRuntime D3 (RTD3) Power Management .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "eYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.allowExternalGpu",
                "option_description": "<rendered-html><p>Whether to enable configuring X to allow external NVIDIA GPUs when\nusing Prime [Reverse] sync optimus .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "eoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.amdgpuBusId",
                "option_description": "<rendered-html><p>Bus ID of the AMD APU. You can find it using lspci; for example if\nlspci shows the AMD APU at \u201c04:00.0\u201d, set this option to\n\u201cPCI:4:0:0\u201d.</p>\n</rendered-html>",
                "option_type": "string matching the pattern ([[:print:]]+[:@][0-9]{1,3}:[0-9]{1,2}:[0-9])?",
                "option_default": "\"\"",
                "option_example": "\"PCI:4:0:0\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "e4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.intelBusId",
                "option_description": "<rendered-html><p>Bus ID of the Intel GPU. You can find it using lspci; for example if\nlspci shows the Intel GPU at \u201c00:02.0\u201d, set this option to\n\u201cPCI:0:2:0\u201d.</p>\n</rendered-html>",
                "option_type": "string matching the pattern ([[:print:]]+[:@][0-9]{1,3}:[0-9]{1,2}:[0-9])?",
                "option_default": "\"\"",
                "option_example": "\"PCI:0:2:0\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "fIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.nvidiaBusId",
                "option_description": "<rendered-html><p>Bus ID of the NVIDIA GPU. You can find it using lspci; for example if\nlspci shows the NVIDIA GPU at \u201c01:00.0\u201d, set this option to\n\u201cPCI:1:0:0\u201d.</p>\n</rendered-html>",
                "option_type": "string matching the pattern ([[:print:]]+[:@][0-9]{1,3}:[0-9]{1,2}:[0-9])?",
                "option_default": "\"\"",
                "option_example": "\"PCI:1:0:0\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "fYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.offload.enable",
                "option_description": "<rendered-html><p>Whether to enable render offload support using the NVIDIA proprietary\ndriver via PRIME.</p>\n<p>If this is enabled, then the bus IDs of the NVIDIA and Intel/AMD GPUs\nhave to be specified (<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.nvidiaBusId</code> and <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.intelBusId</code> or <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.amdgpuBusId</code>) .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "foPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.offload.enableOffloadCmd",
                "option_description": "<rendered-html><p>Whether to enable adding a <code>nvidia-offload</code> convenience\nscript to <code class=\"interpreted-text\"\nrole=\"option\">environment.systemPackages</code> for offloading programs\nto an nvidia device. To work, should have also enabled <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.offload.enable</code> or <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.reverseSync.enable</code>.</p>\n<p>Example usage <code>nvidia-offload sauerbraten_client</code> .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "f4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.reverseSync.enable",
                "option_description": "<rendered-html><p>Whether to enable NVIDIA Optimus support using the NVIDIA proprietary\ndriver via reverse PRIME. If enabled, the Intel/AMD GPU will be used for\nall rendering, while enabling output to displays attached only to the\nNVIDIA GPU without a multiplexer.</p>\n<p>Warning: This feature is relatively new, depending on your system\nthis might work poorly. AMD support, especially so. See: <a\nhref=\"https://forums.developer.nvidia.com/t/the-all-new-outputsink-feature-aka-reverse-prime/129828\">https://forums.developer.nvidia.com/t/the-all-new-outputsink-feature-aka-reverse-prime/129828</a></p>\n<p>Note that this option only has any effect if the \u201cnvidia\u201d driver is\nspecified in <code class=\"interpreted-text\"\nrole=\"option\">services.xserver.videoDrivers</code>, and it should\npreferably be the only driver there.</p>\n<p>If this is enabled, then the bus IDs of the NVIDIA and Intel/AMD GPUs\nhave to be specified (<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.nvidiaBusId</code> and <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.intelBusId</code> or <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.amdgpuBusId</code>).</p>\n<p>If you enable this, you may want to also enable kernel modesetting\nfor the NVIDIA driver (<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.modesetting.enable</code>) in order to\nprevent tearing.</p>\n<p>Note that this configuration will only be successful when a display\nmanager for which the <code class=\"interpreted-text\"\nrole=\"option\">services.xserver.displayManager.setupCommands</code>\noption is supported is used .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "gIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.reverseSync.setupCommands.enable",
                "option_description": "<rendered-html><p>Whether to enable configure the display manager to be able to use the\noutputs attached to the NVIDIA GPU. Disable in order to configure the\nNVIDIA GPU outputs manually using xrandr. Note that this configuration\nwill only be successful when a display manager for which the <code\nclass=\"interpreted-text\"\nrole=\"option\">services.xserver.displayManager.setupCommands</code>\noption is supported is used .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "gYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/video/nvidia.nix",
                "option_name": "hardware.nvidia.prime.sync.enable",
                "option_description": "<rendered-html><p>Whether to enable NVIDIA Optimus support using the NVIDIA proprietary\ndriver via PRIME. If enabled, the NVIDIA GPU will be always on and used\nfor all rendering, while enabling output to displays attached only to\nthe integrated Intel/AMD GPU without a multiplexer.</p>\n<p>Note that this option only has any effect if the \u201cnvidia\u201d driver is\nspecified in <code class=\"interpreted-text\"\nrole=\"option\">services.xserver.videoDrivers</code>, and it should\npreferably be the only driver there.</p>\n<p>If this is enabled, then the bus IDs of the NVIDIA and Intel/AMD GPUs\nhave to be specified (<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.nvidiaBusId</code> and <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.intelBusId</code> or <code\nclass=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.prime.amdgpuBusId</code>).</p>\n<p>If you enable this, you may want to also enable kernel modesetting\nfor the NVIDIA driver (<code class=\"interpreted-text\"\nrole=\"option\">hardware.nvidia.modesetting.enable</code>) in order to\nprevent tearing.</p>\n<p>Note that this configuration will only be successful when a display\nmanager for which the <code class=\"interpreted-text\"\nrole=\"option\">services.xserver.displayManager.setupCommands</code>\noption is supported is used .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "goPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.enable",
                "option_description": "<rendered-html><p>Enable dynamic CDI configuration for NVidia devices by running\nnvidia-container-toolkit on boot.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "g4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mount-nvidia-docker-1-directories",
                "option_description": "<rendered-html><p>Mount nvidia-docker-1 directories on containers:\n/usr/local/nvidia/lib and /usr/local/nvidia/lib64.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "hIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mount-nvidia-executables",
                "option_description": "<rendered-html><p>Mount executables nvidia-smi, nvidia-cuda-mps-control,\nnvidia-cuda-mps-server, nvidia-debugdump, nvidia-powerd and nvidia-ctk\non containers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "hYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mounts",
                "option_description": "<rendered-html><p>Mounts to be added to every container under the Nvidia CDI\nprofile.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "hoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mounts.*.containerPath",
                "option_description": "<rendered-html><p>Container path.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "h4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mounts.*.hostPath",
                "option_description": "<rendered-html><p>Host path.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "iIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-container-toolkit",
                "option_name": "hardware.nvidia-container-toolkit.mounts.*.mountOptions",
                "option_description": "<rendered-html><p>Mount options.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[\n  \"ro\"\n  \"nosuid\"\n  \"nodev\"\n  \"bind\"\n]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "iYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/nvidia-optimus.nix",
                "option_name": "hardware.nvidiaOptimus.disable",
                "option_description": "<rendered-html><p>Completely disable the NVIDIA graphics card and use the integrated\ngraphics processor instead.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ioPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/onlykey/default.nix",
                "option_name": "hardware.onlykey.enable",
                "option_description": "<rendered-html><p>Enable OnlyKey device (<a\nhref=\"https://crp.to/p/\">https://crp.to/p/</a>) support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "i4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.batteryNotifier",
                "option_description": "<rendered-html><p>Settings for device battery notifications.</p>\n</rendered-html>",
                "option_type": "submodule",
                "option_default": "{ }",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "jIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.batteryNotifier.enable",
                "option_description": "<rendered-html><p>Mouse battery notifier.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "jYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.batteryNotifier.frequency",
                "option_description": "<rendered-html><p>How often battery notifications should be shown (in seconds). A value\nof 0 disables notifications.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "600",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "joPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.batteryNotifier.percentage",
                "option_description": "<rendered-html><p>At what battery percentage the device should reach before sending\nnotifications.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "33",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "j4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.devicesOffOnScreensaver",
                "option_description": "<rendered-html><p>Turn off the devices when the systems screensaver kicks in.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "kIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.enable",
                "option_description": "<rendered-html><p>Whether to enable OpenRazer drivers and userspace daemon .</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "kYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.keyStatistics",
                "option_description": "<rendered-html><p>Collects number of keypresses per hour per key used to generate a\nheatmap.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "koPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.syncEffectsEnabled",
                "option_description": "<rendered-html><p>Set the sync effects flag to true so any assignment of effects will\nwork across devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "k4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.users",
                "option_description": "<rendered-html><p>Usernames to be added to the \u201copenrazer\u201d group, so that they can\nstart and interact with the OpenRazer userspace daemon.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "lIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/openrazer.nix",
                "option_name": "hardware.openrazer.verboseLogging",
                "option_description": "<rendered-html><p>Whether to enable verbose logging. Logs debug messages.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "lYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/opentabletdriver.nix",
                "option_name": "hardware.opentabletdriver.blacklistedKernelModules",
                "option_description": "<rendered-html><p>Blacklist of kernel modules known to conflict with\nOpenTabletDriver.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[\n  \"hid-uclogic\"\n  \"wacom\"\n]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "loPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/opentabletdriver.nix",
                "option_name": "hardware.opentabletdriver.daemon.enable",
                "option_description": "<rendered-html><p>Whether to start OpenTabletDriver daemon as a systemd user\nservice.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "l4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/opentabletdriver.nix",
                "option_name": "hardware.opentabletdriver.enable",
                "option_description": "<rendered-html><p>Enable OpenTabletDriver udev rules, user service and blacklist kernel\nmodules known to conflict with OpenTabletDriver.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "mIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/opentabletdriver.nix",
                "option_name": "hardware.opentabletdriver.package",
                "option_description": "<rendered-html><p>The opentabletdriver package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.opentabletdriver",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "mYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/virtualisation/parallels-guest.nix",
                "option_name": "hardware.parallels.autoMountShares",
                "option_description": "<rendered-html><p>Control prlfsmountd service. When this service is running, shares can\nnot be manually mounted through <code>mount -t prl_fs ...</code> as this\nservice will remount and trample any set options. Recommended to enable\nfor simple file sharing, but extended share use such as for code should\ndisable this to manually mount shares.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "moPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/virtualisation/parallels-guest.nix",
                "option_name": "hardware.parallels.enable",
                "option_description": "<rendered-html><p>This enables Parallels Tools for Linux guests, along with provided\nvideo, mouse and other hardware drivers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "m4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/virtualisation/parallels-guest.nix",
                "option_name": "hardware.parallels.package",
                "option_description": "<rendered-html><p>Defines which package to use for prl-tools. Override to change the\nversion.</p>\n</rendered-html>",
                "option_type": "null or package",
                "option_default": "\"config.boot.kernelPackages.prl-tools\"",
                "option_example": "config.boot.kernelPackages.prl-tools",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "nIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/pcmcia.nix",
                "option_name": "hardware.pcmcia.config",
                "option_description": "<rendered-html><p>Path to the configuration file which maps the memory, IRQs and ports\nused by the PCMCIA hardware.</p>\n</rendered-html>",
                "option_type": "null or path",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "nYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/pcmcia.nix",
                "option_name": "hardware.pcmcia.enable",
                "option_description": "<rendered-html><p>Enable this option to support PCMCIA card.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "noPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/pcmcia.nix",
                "option_name": "hardware.pcmcia.firmware",
                "option_description": "<rendered-html><p>List of firmware used to handle specific PCMCIA card.</p>\n</rendered-html>",
                "option_type": "list of path",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "n4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensureDefaultPrinter",
                "option_description": "<rendered-html><p>Ensures the named printer is the default CUPS printer / printer\nqueue.</p>\n</rendered-html>",
                "option_type": "null or printable string without spaces, # and /",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "oIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters",
                "option_description": "<rendered-html><p>Will regularly ensure that the given CUPS printers are configured as\ndeclared here. If a printer\u2019s options are manually changed afterwards,\nthey will be overwritten eventually. This option will never delete any\nprinter, even if removed from this list. You can check existing printers\nwith <code class=\"interpreted-text\" role=\"command\">lpstat -s</code> and\nremove printers with <code class=\"interpreted-text\"\nrole=\"command\">lpadmin -x &lt;printer-name&gt;</code>. Printers not\nlisted here can still be manually configured.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "oYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.description",
                "option_description": "<rendered-html><p>Optional human-readable description.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"Brother HL-5140\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "ooPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.deviceUri",
                "option_description": "<rendered-html><p>How to reach the printer. <code class=\"interpreted-text\"\nrole=\"command\">lpinfo -v</code> shows a list of supported device URIs\nand schemes.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"ipp://printserver.local/printers/BrotherHL_Workroom\"\n\"usb://HP/DESKJET%20940C?serial=CN16E6C364BH\"\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "o4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.location",
                "option_description": "<rendered-html><p>Optional human-readable location.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"Workroom\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "pIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.model",
                "option_description": "<rendered-html><p>Location of the ppd driver file for the printer. <code\nclass=\"interpreted-text\" role=\"command\">lpinfo -m</code> shows a list of\nsupported models.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"gutenprint.${lib.versions.majorMinor (lib.getVersion pkgs.gutenprint)}://brother-hl-5140/expert\"\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "pYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.name",
                "option_description": "<rendered-html><p>Name of the printer / printer queue. May contain any printable\ncharacters except \u201c/\u201d, \u201c#\u201d, and space.</p>\n</rendered-html>",
                "option_type": "printable string without spaces, # and /",
                "option_default": null,
                "option_example": "\"BrotherHL_Workroom\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "poPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/printers.nix",
                "option_name": "hardware.printers.ensurePrinters.*.ppdOptions",
                "option_description": "<rendered-html><p>Sets PPD options for the printer. <code class=\"interpreted-text\"\nrole=\"command\">lpoptions [-p printername] -l</code> shows supported PPD\noptions for the given printer.</p>\n</rendered-html>",
                "option_type": "attribute set of string",
                "option_default": "{ }",
                "option_example": "{\n  Duplex = \"DuplexNoTumble\";\n  PageSize = \"A4\";\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "p4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.configFile",
                "option_description": "<rendered-html><p>The path to the default configuration options the PulseAudio server\nshould use. By default, the \u201cdefault.pa\u201d configuration from the\nPulseAudio distribution is used.</p>\n</rendered-html>",
                "option_type": "null or path",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "qIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.daemon.config",
                "option_description": "<rendered-html><p>Config of the pulse daemon. See\n<code>man pulse-daemon.conf</code>.</p>\n</rendered-html>",
                "option_type": "attribute set of unspecified value",
                "option_default": "{ }",
                "option_example": "{ realtime-scheduling = \"yes\"; }",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "qYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.daemon.logLevel",
                "option_description": "<rendered-html><p>The log level that the system-wide pulseaudio daemon should use, if\nactivated.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"notice\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "qoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.enable",
                "option_description": "<rendered-html><p>Whether to enable the PulseAudio sound server.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "q4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.extraClientConf",
                "option_description": "<rendered-html><p>Extra configuration appended to pulse/client.conf file.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "rIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.extraConfig",
                "option_description": "<rendered-html><p>Literal string to append to <code>configFile</code> and the config\nfile generated by the pulseaudio module.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "rYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.extraModules",
                "option_description": "<rendered-html><p>Extra pulseaudio modules to use. This is intended for out-of-tree\npulseaudio modules like extra bluetooth codecs.</p>\n<p>Extra modules take precedence over built-in pulseaudio modules.</p>\n</rendered-html>",
                "option_type": "list of package",
                "option_default": "[ ]",
                "option_example": "[ pkgs.pulseaudio-modules-bt ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "roPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.package",
                "option_description": "<rendered-html><p>The PulseAudio derivation to use. This can be used to enable features\n(such as JACK support, Bluetooth) via the <code>pulseaudioFull</code>\npackage.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.pulseaudio",
                "option_example": "pkgs.pulseaudioFull",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "r4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.support32Bit",
                "option_description": "<rendered-html><p>Whether to include the 32-bit pulseaudio libraries in the system or\nnot. This is only useful on 64-bit systems and currently limited to\nx86_64-linux.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "sIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.systemWide",
                "option_description": "<rendered-html><p>If false, a PulseAudio server is launched automatically for each user\nthat tries to use the sound system. The server runs with user\nprivileges. If true, one system-wide PulseAudio server is launched on\nboot, running as the user \u201cpulse\u201d, and only users in the \u201cpulse-access\u201d\ngroup will have access to the server. Please read the PulseAudio\ndocumentation for more details.</p>\n<p>Don\u2019t enable this option unless you know what you are doing.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "sYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.tcp.anonymousClients.allowAll",
                "option_description": "<rendered-html><p>Whether to enable all anonymous clients to stream to the server.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "soPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.tcp.anonymousClients.allowedIpRanges",
                "option_description": "<rendered-html><p>A list of IP subnets that are allowed to stream to the server.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": "[ \"127.0.0.1\" \"192.168.1.0/24\" ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "s4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.tcp.enable",
                "option_description": "<rendered-html><p>Whether to enable tcp streaming support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "tIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.zeroconf.discovery.enable",
                "option_description": "<rendered-html><p>Whether to enable discovery of pulseaudio sinks in the local\nnetwork.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "tYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/config/pulseaudio.nix",
                "option_name": "hardware.pulseaudio.zeroconf.publish.enable",
                "option_description": "<rendered-html><p>Whether to enable publishing the pulseaudio sink in the local\nnetwork.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "toPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/raid/hpsa.nix",
                "option_name": "hardware.raid.HPSmartArray.enable",
                "option_description": "<rendered-html><p>Whether to enable HP Smart Array kernel modules and CLI utility.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "t4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.config",
                "option_description": "<rendered-html><p>rasdaemon configuration, currently only used for CE PFA for details,\nread rasdaemon.outPath/etc/sysconfig/rasdaemon\u2019s comments</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": "''\n  # defaults from included config\n  PAGE_CE_REFRESH_CYCLE=\"24h\"\n  PAGE_CE_THRESHOLD=\"50\"\n  PAGE_CE_ACTION=\"soft\"\n''",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "uIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.enable",
                "option_description": "<rendered-html><p>Whether to enable RAS logging daemon.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "uYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.extraModules",
                "option_description": "<rendered-html><p>extra kernel modules to load</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": "[\n  \"i7core_edac\"\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "uoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.labels",
                "option_description": "<rendered-html><p>Additional memory module label descriptions to be placed in\n/etc/ras/dimm_labels.d/labels</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": "''\n  # vendor and model may be shown by 'ras-mc-ctl --mainboard'\n  vendor: ASRock\n    product: To Be Filled By O.E.M.\n    model: B450M Pro4\n      # these labels are names for the motherboard slots\n      # the numbers may be shown by `ras-mc-ctl --error-count`\n      # they are mc:csrow:channel\n      DDR4_A1: 0.2.0;  DDR4_B1: 0.2.1;\n      DDR4_A2: 0.3.0;  DDR4_B2: 0.3.1;\n''",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "u4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.mainboard",
                "option_description": "<rendered-html><p>Custom mainboard description, see <code class=\"interpreted-text\"\nrole=\"manpage\">ras-mc-ctl(8)</code> for more details.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": "''\n  vendor = ASRock\n  model = B450M Pro4\n  \n  # it should default to such values from\n  # /sys/class/dmi/id/board_[vendor|name]\n  # alternatively one can supply a script\n  # that returns the same format as above\n  \n  script = <path to script>\n''",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "vIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.record",
                "option_description": "<rendered-html><p>record events via sqlite3, required for ras-mc-ctl</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "vYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/rasdaemon.nix",
                "option_name": "hardware.rasdaemon.testing",
                "option_description": "<rendered-html><p>Whether to enable error injection infrastructure.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "voPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/rtl-sdr.nix",
                "option_name": "hardware.rtl-sdr.enable",
                "option_description": "<rendered-html><p>Enables rtl-sdr udev rules, ensures \u2018plugdev\u2019 group exists, and\nblacklists DVB kernel modules. This is a prerequisite to using devices\nsupported by rtl-sdr without being root, since rtl-sdr USB descriptors\nwill be owned by plugdev through udev.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "v4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/saleae-logic.nix",
                "option_name": "hardware.saleae-logic.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules for Saleae Logic devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "wIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/saleae-logic.nix",
                "option_name": "hardware.saleae-logic.package",
                "option_description": "<rendered-html><p>Saleae Logic package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.saleae-logic-2",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "wYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.backends-package",
                "option_description": "<rendered-html><p>Backends driver package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.sane-backends",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "woPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.enable",
                "option_description": "<rendered-html><p>When enabled, will automatically register the \u201cbrscan4\u201d sane backend\nand bring configuration files to their expected location.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "w4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.netDevices",
                "option_description": "<rendered-html><p>The list of network devices that will be registered against the\nbrscan4 sane backend.</p>\n</rendered-html>",
                "option_type": "attribute set of (submodule)",
                "option_default": "{ }",
                "option_example": "{\n  office1 = {\n    ip = \"192.168.1.2\";\n    model = \"MFC-7860DW\";\n  };\n  office2 = {\n    model = \"MFC-7860DW\";\n    nodename = \"BRW0080927AFBCE\";\n  };\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "xIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.netDevices.<name>.ip",
                "option_description": "<rendered-html><p>The ip address of the device. If undefined, you will have to provide\na nodename.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"192.168.1.2\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "xYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.netDevices.<name>.model",
                "option_description": "<rendered-html><p>The model of the network device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"MFC-7860DW\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "xoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.netDevices.<name>.name",
                "option_description": "<rendered-html><p>The friendly name you give to the network device. If undefined, the\nname of attribute will be used.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"office1\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "x4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan4.nix",
                "option_name": "hardware.sane.brscan4.netDevices.<name>.nodename",
                "option_description": "<rendered-html><p>The node name of the device. If undefined, you will have to provide\nan ip.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"BRW0080927AFBCE\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "yIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.enable",
                "option_description": "<rendered-html><p>Whether to enable the Brother brscan5 sane backend.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "yYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.netDevices",
                "option_description": "<rendered-html><p>The list of network devices that will be registered against the\nbrscan5 sane backend.</p>\n</rendered-html>",
                "option_type": "attribute set of (submodule)",
                "option_default": "{ }",
                "option_example": "{\n  office1 = {\n    ip = \"192.168.1.2\";\n    model = \"MFC-7860DW\";\n  };\n  office2 = {\n    model = \"MFC-7860DW\";\n    nodename = \"BRW0080927AFBCE\";\n  };\n}",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "yoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.netDevices.<name>.ip",
                "option_description": "<rendered-html><p>The ip address of the device. If undefined, you will have to provide\na nodename.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"192.168.1.2\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "y4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.netDevices.<name>.model",
                "option_description": "<rendered-html><p>The model of the network device.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"ADS-1200\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "zIPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.netDevices.<name>.name",
                "option_description": "<rendered-html><p>The friendly name you give to the network device. If undefined, the\nname of attribute will be used.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"office1\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "zYPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/brscan5.nix",
                "option_name": "hardware.sane.brscan5.netDevices.<name>.nodename",
                "option_description": "<rendered-html><p>The node name of the device. If undefined, you will have to provide\nan ip.</p>\n</rendered-html>",
                "option_type": "null or string",
                "option_default": "null",
                "option_example": "\"BRW0080927AFBCE\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "zoPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.disabledDefaultBackends",
                "option_description": "<rendered-html><p>Names of backends which are enabled by default but should be\ndisabled. See <code>$SANE_CONFIG_DIR/dll.conf</code> for the list of\npossible names.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": "[\n  \"v4l\"\n]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "z4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.drivers.scanSnap.enable",
                "option_description": "<rendered-html><p>Whether to enable drivers for the Fujitsu ScanSnap scanners.</p>\n<p>The driver files are unfree and extracted from the Windows driver\nimage.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.drivers.scanSnap.package",
                "option_description": "<rendered-html><p>The epjitsu package to use. Useful if you want to extract the driver\nfiles yourself.</p>\n<p>The process is described in the <code class=\"interpreted-text\"\nrole=\"file\">/etc/sane.d/epjitsu.conf</code> file in the\n<code>sane-backends</code> package.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.sane-drivers.epjitsu",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane_extra_backends/dsseries.nix",
                "option_name": "hardware.sane.dsseries.enable",
                "option_description": "<rendered-html><p>When enabled, will automatically register the \u201cdsseries\u201d SANE\nbackend.</p>\n<p>This supports the Brother DSmobile scanner series, including the\nDS-620, DS-720D, DS-820W, and DS-920DW scanners.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.enable",
                "option_description": "<rendered-html><p>Enable support for SANE scanners.</p>\n<div class=\"note\">\n<p>Users in the \u201cscanner\u201d group will gain access to the scanner, or the\n\u201clp\u201d group if it\u2019s also a printer.</p>\n</div>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "04PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.extraBackends",
                "option_description": "<rendered-html><p>Packages providing extra SANE backends to enable.</p>\n<div class=\"note\">\n<p>The example contains the package for HP scanners, and the package for\nApple AirScan and Microsoft WSD support (supports many\nvendors/devices).</p>\n</div>\n</rendered-html>",
                "option_type": "list of path",
                "option_default": "[ ]",
                "option_example": "[ pkgs.hplipWithPlugin pkgs.sane-airscan ]",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.netConf",
                "option_description": "<rendered-html><p>Network hosts that should be probed for remote scanners.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": "\"192.168.0.16\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.openFirewall",
                "option_description": "<rendered-html><p>Open ports needed for discovery of scanners on the local network,\ne.g. needed for Canon scanners (BJNP protocol).</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/sane.nix",
                "option_name": "hardware.sane.snapshot",
                "option_description": "<rendered-html><p>Use a development snapshot of SANE scanner drivers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "14PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sata.nix",
                "option_name": "hardware.sata.timeout.deciSeconds",
                "option_description": "<rendered-html><p>Set SCT Error Recovery Control timeout in deciseconds for use in RAID\nconfigurations.</p>\n<p>Values are as follows: 0 = disable SCT ERT 70 = default in consumer\ndrives (7 seconds)</p>\n<p>Maximum is disk dependant but probably 60 seconds.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": null,
                "option_example": "70",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sata.nix",
                "option_name": "hardware.sata.timeout.drives",
                "option_description": "<rendered-html><p>List of drives for which to configure the timeout.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sata.nix",
                "option_name": "hardware.sata.timeout.drives.*.idBy",
                "option_description": "<rendered-html><p>The method to identify the drive.</p>\n</rendered-html>",
                "option_type": "one of \"path\", \"wwn\"",
                "option_default": "\"path\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sata.nix",
                "option_name": "hardware.sata.timeout.drives.*.name",
                "option_description": "<rendered-html><p>Drive name without the full path.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "24PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sata.nix",
                "option_name": "hardware.sata.timeout.enable",
                "option_description": "<rendered-html><p>Whether to enable SATA drive timeouts.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/hddtemp.nix",
                "option_name": "hardware.sensor.hddtemp.dbEntries",
                "option_description": "<rendered-html><p>Additional DB entries</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/hddtemp.nix",
                "option_name": "hardware.sensor.hddtemp.drives",
                "option_description": "<rendered-html><p>List of drives to monitor. If you pass /dev/disk/by-path/* entries\nthe symlinks will be resolved as hddtemp doesn\u2019t like names with\ncolons.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": null,
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/hddtemp.nix",
                "option_name": "hardware.sensor.hddtemp.enable",
                "option_description": "<rendered-html><p>Enable this option to support HDD/SSD temperature sensors.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "34PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/hddtemp.nix",
                "option_name": "hardware.sensor.hddtemp.extraArgs",
                "option_description": "<rendered-html><p>Additional arguments passed to the daemon.</p>\n</rendered-html>",
                "option_type": "list of string",
                "option_default": "[ ]",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/hddtemp.nix",
                "option_name": "hardware.sensor.hddtemp.unit",
                "option_description": "<rendered-html><p>Celsius or Fahrenheit</p>\n</rendered-html>",
                "option_type": "one of \"C\", \"F\"",
                "option_default": "\"C\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/sensor/iio.nix",
                "option_name": "hardware.sensor.iio.enable",
                "option_description": "<rendered-html><p>Enable this option to support IIO sensors with iio-sensor-proxy.</p>\n<p>IIO sensors are used for orientation and ambient light sensors on\nsome mobile devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/spacenavd.nix",
                "option_name": "hardware.spacenavd.enable",
                "option_description": "<rendered-html><p>Whether to enable spacenavd to support 3DConnexion devices.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "44PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/steam-hardware.nix",
                "option_name": "hardware.steam-hardware.enable",
                "option_description": "<rendered-html><p>Enable udev rules for Steam hardware such as the Steam Controller,\nother supported controllers and the HTC Vive</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "5IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/system-76.nix",
                "option_name": "hardware.system76.enableAll",
                "option_description": "<rendered-html><p>Whether to enable all recommended configuration for system76\nsystems.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "5YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/system-76.nix",
                "option_name": "hardware.system76.firmware-daemon.enable",
                "option_description": "<rendered-html><p>Whether to enable the system76 firmware daemon</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "config.hardware.system76.enableAll",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "5oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/system-76.nix",
                "option_name": "hardware.system76.kernel-modules.enable",
                "option_description": "<rendered-html><p>Whether to make the system76 out-of-tree kernel modules available</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "config.hardware.system76.enableAll",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "54PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/system-76.nix",
                "option_name": "hardware.system76.power-daemon.enable",
                "option_description": "<rendered-html><p>Whether to enable the system76 power daemon</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "config.hardware.system76.enableAll",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "6IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.device",
                "option_description": "<rendered-html><p>The device name of the trackpoint. You can check with xinput. Some\nnewer devices (example x1c6) use \u201cTPPS/2 Elan TrackPoint\u201d.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"TPPS/2 IBM TrackPoint\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "6YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.emulateWheel",
                "option_description": "<rendered-html><p>Enable scrolling while holding the middle mouse button.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "6oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.enable",
                "option_description": "<rendered-html><p>Enable sensitivity and speed configuration for trackpoints.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "64PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.fakeButtons",
                "option_description": "<rendered-html><p>Switch to \u201cbare\u201d PS/2 mouse support in case Trackpoint buttons are\nnot recognized properly. This can happen for example on models like the\nL430, T450, T450s, on which the Trackpoint buttons are actually a part\nof the Synaptics touchpad.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "7IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.sensitivity",
                "option_description": "<rendered-html><p>Configure the trackpoint sensitivity. By default, the kernel\nconfigures 128.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "128",
                "option_example": "255",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "7YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/tasks/trackpoint.nix",
                "option_name": "hardware.trackpoint.speed",
                "option_description": "<rendered-html><p>Configure the trackpoint speed. By default, the kernel configures\n97.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "97",
                "option_example": "255",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "7oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/tuxedo-keyboard.nix",
                "option_name": "hardware.tuxedo-keyboard.enable",
                "option_description": "<rendered-html><p>Whether to enable the tuxedo-keyboard driver.</p>\n<p>To configure the driver, pass the options to the <code\nclass=\"interpreted-text\" role=\"option\">boot.kernelParams</code>\nconfiguration. There are several parameters you can change. It\u2019s best to\ncheck at the source code description which options are supported. You\ncan find all the supported parameters at: <a\nhref=\"https://github.com/tuxedocomputers/tuxedo-keyboard#kernelparam\">https://github.com/tuxedocomputers/tuxedo-keyboard#kernelparam</a></p>\n<p>In order to use the <code>custom</code> lighting with the maximumg\nbrightness and a color of <code>0xff0a0a</code> one would put pass <code\nclass=\"interpreted-text\" role=\"option\">boot.kernelParams</code> like\nthis:</p>\n<pre><code>boot.kernelParams = [\n &quot;tuxedo_keyboard.mode=0&quot;\n &quot;tuxedo_keyboard.brightness=255&quot;\n &quot;tuxedo_keyboard.color_left=0xff0a0a&quot;\n];</code></pre>\n<p>.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "74PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/tuxedo-rs.nix",
                "option_name": "hardware.tuxedo-rs.enable",
                "option_description": "<rendered-html><p>Whether to enable Rust utilities for interacting with hardware from\nTUXEDO Computers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "8IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/tuxedo-rs.nix",
                "option_name": "hardware.tuxedo-rs.tailor-gui.enable",
                "option_description": "<rendered-html><p>Whether to enable tailor-gui, an alternative to TUXEDO Control\nCenter, written in Rust.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "8YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ubertooth.nix",
                "option_name": "hardware.ubertooth.enable",
                "option_description": "<rendered-html><p>Whether to enable Ubertooth software and its udev rules.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "8oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/ubertooth.nix",
                "option_name": "hardware.ubertooth.group",
                "option_description": "<rendered-html><p>Group for Ubertooth\u2019s udev rules.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"ubertooth\"",
                "option_example": "\"wheel\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "84PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uinput.nix",
                "option_name": "hardware.uinput.enable",
                "option_description": "<rendered-html><p>Whether to enable uinput support.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "9IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices",
                "option_description": "<rendered-html><p>List of controllers with their configurations.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": "[\n  {\n    device_id = \"VID:1111/PID:11111/SN:1111111111\";\n    sync_rgb = true;\n    channels = [\n      {\n        mode = \"PWM\";\n      }\n      {\n        mode = \"Manual\";\n        speed = 100;\n      }\n      {\n        mode = \"Manual\";\n        speed = 54;\n      }\n      {\n        mode = \"Manual\";\n        speed = 0;\n      }\n    ];\n  }\n  {\n    device_id = \"VID:1010/PID:10101/SN:1010101010\";\n    sync_rgb = false;\n    channels = [\n      {\n        mode = \"Manual\";\n        speed = 0;\n      }\n    ];\n  }\n]\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "9YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices.*.channels",
                "option_description": "<rendered-html><p>List of channels connected to the controller.</p>\n</rendered-html>",
                "option_type": "list of (submodule)",
                "option_default": "[ ]",
                "option_example": "[\n  {\n    mode = \"PWM\";\n  }\n  {\n    mode = \"Manual\";\n    speed = 100;\n  }\n  {\n    mode = \"Manual\";\n    speed = 54;\n  }\n  {\n    mode = \"Manual\";\n    speed = 0;\n  }\n]\n",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "9oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices.*.channels.*.mode",
                "option_description": "<rendered-html><p>\u201cPWM\u201d to enable PWM sync. \u201cManual\u201d to set speed.</p>\n</rendered-html>",
                "option_type": "one of \"Manual\", \"PWM\"",
                "option_default": "\"Manual\"",
                "option_example": "\"PWM\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "94PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices.*.channels.*.speed",
                "option_description": "<rendered-html><p>Fan speed as percentage (clamped between 0 and 100).</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "\"50\"",
                "option_example": "\"100\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "-IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices.*.device_id",
                "option_description": "<rendered-html><p>Unique device ID displayed at each startup.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": null,
                "option_example": "\"VID:1111/PID:11111/SN:1111111111\"",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "-YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.devices.*.sync_rgb",
                "option_description": "<rendered-html><p>Enable ARGB header sync.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "-oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.enable",
                "option_description": "<rendered-html><p>Whether to enable udev rules and software for Lian Li Uni\nControllers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "-4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/uni-sync.nix",
                "option_name": "hardware.uni-sync.package",
                "option_description": "<rendered-html><p>The uni-sync package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.uni-sync",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_IPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/usb-modeswitch.nix",
                "option_name": "hardware.usb-modeswitch.enable",
                "option_description": "<rendered-html><p>Enable this option to support certain USB WLAN and WWAN adapters.</p>\n<p>These network adapters initial present themselves as Flash Drives\ncontaining their drivers. This option enables automatic switching to the\nnetworking mode.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_YPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/usb-storage.nix",
                "option_name": "hardware.usbStorage.manageStartStop",
                "option_description": "<rendered-html><p>Enable this option to gracefully spin-down external storage during\nshutdown. If you suspect improper head parking after poweroff, install\n<code>smartmontools</code> and check for the\n<code>Power-Off_Retract_Count</code> field for an increment.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_oPL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/all-firmware.nix",
                "option_name": "hardware.wirelessRegulatoryDatabase",
                "option_description": "<rendered-html><p>Whether to enable loading the wireless regulatory database at\nboot.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "<rendered-html><p>Enabled if proprietary firmware is allowed via <code\nclass=\"interpreted-text\"\nrole=\"option\">enableRedistributableFirmware</code> or <code\nclass=\"interpreted-text\" role=\"option\">enableAllFirmware</code>.</p>\n</rendered-html>",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "_4PL3JABMU8RZ4DXflBj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/wooting.nix",
                "option_name": "hardware.wooting.enable",
                "option_description": "<rendered-html><p>Whether to enable support for Wooting keyboards. Note that users must\nbe in the \u201cinput\u201d group for udev rules to apply.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "AIPL3JABMU8RZ4DXflFj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/xone.nix",
                "option_name": "hardware.xone.enable",
                "option_description": "<rendered-html><p>Whether to enable the xone driver for Xbox One and Xbox Series X|S\naccessories.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "AYPL3JABMU8RZ4DXflFj",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/hardware/xpadneo.nix",
                "option_name": "hardware.xpadneo.enable",
                "option_description": "<rendered-html><p>Whether to enable the xpadneo driver for Xbox One wireless\ncontrollers.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "zlLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/argonone.nix",
                "option_name": "services.hardware.argonone.enable",
                "option_description": "<rendered-html><p>Whether to enable the driver for Argon One Raspberry Pi case fan and\npower button.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "z1LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/argonone.nix",
                "option_name": "services.hardware.argonone.package",
                "option_description": "<rendered-html><p>The package implementing the Argon One driver</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.argononed",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0FLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bolt.nix",
                "option_name": "services.hardware.bolt.enable",
                "option_description": "<rendered-html><p>Whether to enable Bolt, a userspace daemon to enable security levels\nfor Thunderbolt 3 on GNU/Linux.</p>\n<p>Bolt is used by GNOME 3 to handle Thunderbolt settings.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0VLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/bolt.nix",
                "option_name": "services.hardware.bolt.package",
                "option_description": "<rendered-html><p>The bolt package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.bolt",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "0lLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.client.enable",
                "option_description": "<rendered-html><p>Enable the LCD panel client (LCDproc)</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "01LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.client.extraConfig",
                "option_description": "<rendered-html><p>Additional configuration added verbatim to the client config.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1FLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.client.restartForever",
                "option_description": "<rendered-html><p>Try restarting the client forever.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "true",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1VLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.enable",
                "option_description": "<rendered-html><p>Enable the LCD panel server (LCDd)</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "1lLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.extraConfig",
                "option_description": "<rendered-html><p>Additional configuration added verbatim to the server config.</p>\n</rendered-html>",
                "option_type": "strings concatenated with \"\\n\"",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "11LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.openPorts",
                "option_description": "<rendered-html><p>Open the ports in the firewall</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2FLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.usbGroup",
                "option_description": "<rendered-html><p>The group to use for settings permissions. This group must exist or\nyou will have to create it.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"dialout\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2VLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.usbPermissions",
                "option_description": "<rendered-html><p>Set group-write permissions on a USB device.</p>\n<p>A USB connected LCD panel will most likely require having its\npermissions modified for lcdd to write to it. Enabling this option sets\ngroup-write permissions on the device identified by <code\nclass=\"interpreted-text\"\nrole=\"option\">services.hardware.lcd.usbVid</code> and <code\nclass=\"interpreted-text\"\nrole=\"option\">services.hardware.lcd.usbPid</code>. In order to find the\nvalues, you can run the <code class=\"interpreted-text\"\nrole=\"command\">lsusb</code> command. Example output:</p>\n<pre><code>Bus 005 Device 002: ID 0403:c630 Future Technology Devices International, Ltd lcd2usb interface</code></pre>\n<p>In this case the vendor id is 0403 and the product id is c630.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "2lLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.usbPid",
                "option_description": "<rendered-html><p>The product ID of the USB device to claim.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "21LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.server.usbVid",
                "option_description": "<rendered-html><p>The vendor ID of the USB device to claim.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3FLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.serverHost",
                "option_description": "<rendered-html><p>Host on which LCDd is listening.</p>\n</rendered-html>",
                "option_type": "string",
                "option_default": "\"localhost\"",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3VLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/lcd.nix",
                "option_name": "services.hardware.lcd.serverPort",
                "option_description": "<rendered-html><p>Port on which LCDd is listening.</p>\n</rendered-html>",
                "option_type": "signed integer",
                "option_default": "13666",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "3lLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/openrgb.nix",
                "option_name": "services.hardware.openrgb.enable",
                "option_description": "<rendered-html><p>Whether to enable OpenRGB server, for RGB lighting control.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": "true",
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "31LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/openrgb.nix",
                "option_name": "services.hardware.openrgb.motherboard",
                "option_description": "<rendered-html><p>CPU family of motherboard. Allows for addition motherboard i2c\nsupport.</p>\n</rendered-html>",
                "option_type": "null or one of \"amd\", \"intel\"",
                "option_default": "<rendered-html><p>if config.hardware.cpu.intel.updateMicrocode then \u201cintel\u201d else if\nconfig.hardware.cpu.amd.updateMicrocode then \u201camd\u201d else null;</p>\n</rendered-html>",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4FLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/openrgb.nix",
                "option_name": "services.hardware.openrgb.package",
                "option_description": "<rendered-html><p>The openrgb package to use.</p>\n</rendered-html>",
                "option_type": "package",
                "option_default": "pkgs.openrgb",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4VLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/openrgb.nix",
                "option_name": "services.hardware.openrgb.server.port",
                "option_description": "<rendered-html><p>Set server port of openrgb.</p>\n</rendered-html>",
                "option_type": "16 bit unsigned integer; between 0 and 65535 (both inclusive)",
                "option_default": "6742",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "4lLX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/pommed.nix",
                "option_name": "services.hardware.pommed.configFile",
                "option_description": "<rendered-html><p>The path to the <code class=\"interpreted-text\"\nrole=\"file\">pommed.conf</code> file. Leave to null to use the default\nconfig file (<code class=\"interpreted-text\"\nrole=\"file\">/etc/pommed.conf.mactel</code>). See the files <code\nclass=\"interpreted-text\" role=\"file\">/etc/pommed.conf.mactel</code> and\n<code class=\"interpreted-text\" role=\"file\">/etc/pommed.conf.pmac</code>\nfor examples to build on.</p>\n</rendered-html>",
                "option_type": "null or path",
                "option_default": "null",
                "option_example": null,
                "option_flake": null
            }
        },
        {
            "_index": "nixos-42-unstable-68c9ed8bbed9dfce253cc91560bf9043297ef2fe",
            "_type": "_doc",
            "_id": "41LX3JABZu4t0s2IW0Fi",
            "_score": 1.0,
            "_source": {
                "type": "option",
                "option_source": "nixos/modules/services/hardware/pommed.nix",
                "option_name": "services.hardware.pommed.enable",
                "option_description": "<rendered-html><p>Whether to use the pommed tool to handle Apple laptop keyboard\nhotkeys.</p>\n</rendered-html>",
                "option_type": "boolean",
                "option_default": "false",
                "option_example": null,
                "option_flake": null
            }
        }
    ]
}